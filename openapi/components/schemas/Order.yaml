properties:
  type:
    description: |
      - `redirect` orders redirect the customer to a MultiSafepay payment page where the customer can select a payment method and/or complete the payment. 
      - `direct` orders redirect the customer to an authentication or success page, depending on the payment method.
      - `paymentlink` orders are accessible through a the [merchant dashboard](https://merchant.multisafepay.com/).
      - `checkout` for FastCheckout orders.
    example: redirect
    type: string
    enum: [direct, redirect, checkout, paymentlink]
  order_id:
    $ref: 'OrderId.yaml'
  gateway:
    allOf:
      - description: "The unique gateway identifier for the payment method.<br><br>If unset, and `type` is set to `redirect`, a MultiSafepay payment page with all available payment methods is returned."
      - example: IDEAL
      - type: string
      - $ref: 'GatewayIdentifiers.yaml'
  currency:
    $ref: 'Currency.yaml'
  amount:
    $ref: 'Amount.yaml'
  description:
    $ref: 'Description.yaml'
  payment_options:
    description: contains URLs to the success page, cancel page and your webhook endpoint.
    type: object
    properties:
      notification_url: 
        description: Endpoint for MultiSafepay to send status updates and other notifications to you.
        type: string
        example: https://www.example.com/payment-updates/
      notification_method:
        description: |
          Sets the notification method.
          
          We advice setting the notification method to `POST`, to reduce network load and increase security.

          See also, [Notification URL](https://docs.multisafepay.com/developer/api/notification-url/).
        type: string
        enum: [POST, GET]
        default: GET
        example: POST
      redirect_url:
        description: Page that the customer is redirected to after **successful** payments.
        type: string
        example: https://www.example.com/test-order-0001/successful/
      cancel_url:
        description: Page that the customer is redirected to after **unsuccessful** payments.
        type: string
        example: https://www.example.com/test-order-0001/unsuccessful/
      close_window:
        description: To display the MultiSafepay payment page in a new window that automatically closes after the customer completes payment, set to `true`.
        type: boolean
        default: false
      settings:
        description: Contains gateway-specific settings
        type: object
        properties:
          coupons: 
            description: Contains settings for gift cards
            properties:
              allow:
                description: Specifies what gift cards the customer may pay with
                type: array
                example: EDENCO
                enum: [BABYCAD, BEAUTYWELL, BLOEMENCAD, BOEKENBON, DEGROTESPL, EDENCOM, EDENCO, EDENRES, EDENSPORTS, FASHIONCHQ, FASHIONGFT, FIETSENBON, GOOD4FUN, GEZONDHEID, NATNLBIOSC, NATNLETUIN, PARFUMCADE, SPORTENFIT, VRGIFTCARD, VVVGIFTCRD, WEBSHOPGFT, WIJNCADEAU, YOURGIFT]
      template_id: 
        description: |
          Apply a [payment page styling template](https://docs.multisafepay.com/payment-pages/styling/) through it's identifier.

          If `payment_options.template` is also set, `payment_options.template` is used.
        type: string
      template: 
        description: |
          A template object structure.
          
          The template structure overrides the `payment_options.template_id`.
        properties:
          version: 
            description:
  var1:
    $ref: 'var12.yaml'
  var2:
    $ref: 'var12.yaml'
  var3:
    $ref: 'var3.yaml'
  custom_info:
    description: Used to store custom information about the order
    properties:
      custom_1:
        description: First string to store 
        type: string
      custom_2:
        description:
        type: string
      custom_3:
        description:
        type: string
  customer:
    $ref: 'CustomerObject.yaml'
  delivery:
    description: The delivery information for shipping the order.
    type: object
    properties:
      first_name:
        description: The customer’s first name.
        type: string
        minLength: 2
        example: "John"
      last_name:
        description: The customer's last name.
        type: string
        minLength: 2
        example: "Doe"
      address1:
        description: The first line of the customer’s address.
        type: string
        example: "Kraanspoor"
      house_number:
        description: The customer’s house number.
        type: string
        example: "39C"
      zip_code:
        description: The customer’s ZIP/postal code.
        type: string
        example: "1033 SC"
      city:
        description: The customer’s city of residence.
        type: string
        example: "Amsterdam"
      country:
        description: | 
          The customer’s country of residence.

          **Format**: [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
        type: string
        example: "NL"
  gateway_info:
    type: object
    description: Information specific to the payment method (`gateway`).
    properties:
      flexible_3d: 
        description: |
          Sets whether or not 3D Secure authentication is required

          **True**: enable the 3D Secure authentication  
          **False**: disable the 3D Secure authentication
        type: boolean
      card_number:
        description: The customer's credit card number
        type: string
        example: "4111111111111111"
      card_holder_name:
        description: The cardholder's name
        type: name
        example: John Doe
      card_expiry_date:
        description: The credit card's expiry date
        type: string
        format: yyMM
        example: "2412"
      card_cvc:
        description: |
          The card verification code (CVC) is a 3 or 4 digit number used as an additional security feature for card-not-present transactions.  
          
          `card_cvc` is not required for:
          - Debit cards, like `MAESTRO`
          - Recurring payments
        type: string
        example: "123"
      term_url: 
        description: URL that is used to instruct the card issuer where to redirect the authorisation query.
        type: string
        format: URL
        example: https://example.com/?type=term&api_key=<api_key>
      issuer_id:
        description: The unique identifier of the gateway issuer.
        type: string
        example: '0021'
  second_chance:
    description: |
      Sends a reminder email to the customer containing a payment link.

      See also, [Second Chance](https://docs.multisafepay.com/features/second-chance/).
    type: object
    properties:
      send_mail:
        description: |
          Sets whether reminder emails are sent if the customer doesn't complete the payment.

          - If `true`, sends reminder emails.
          - If `false` or unset, doesn't send reminder emails.
        type: boolean
  checkout_options:
    description: The settings for payment processing.
    type: object 
    properties:
      validate_cart:
        description: |
          If set to `true`, the value of `amount` is compared with the calculated total value of the shopping cart (returned as `order_total`).

          If the values:
          
          - Match: the request is successful.
          - Don’t match: the request is not successful and error_code 1027 is returned.
        type: boolean
        default: false
      tax_tables:
        description: Set default VAT settings and create VAT classes in the alternate array that you can apply to individual shopping cart items.
        type: object
        properties:
          default:
            description: The default VAT setting. Used when no value is set for `shopping_cart.items.tax_table_selector`.
            type: object
            properties: 
              shipping_taxed: 
                description: Whether or not the shipping costs are taxed.
                type: boolean
              rate:
                description: |
                  The tax rate percentage as a fraction e.g. 15% is expressed as `0.15`
                type: number
                format: float
                example: 0.15
                minimum: 0
          alternate: 
            description: An array of client-defined VAT classes that you can apply to items in the shopping cart.
            type: array
            items: 
              type: object
              properties:
                name:
                  description: The client-defined ID. Used to apply tax settings to items in the shopping cart through the `shopping_cart.items.tax_table_selector` attribute.
                  type: string
                standalone:
                  description: Whether or not the shipping costs are taxed.
                  type: boolean
                rules: 
                  type: array
                  items: 
                    type: object
                    properties:
                      rate:
                        description: The tax rate percentage expressed as a fraction.
                        type: number
                        format: float
                        example: 0.0825
                        minimum: 0
                      country:
                        description: |
                          The country where the tax rate applies.

                          See also, [ISO 3166-1 alpha-2]()
                        type: string
                        example: US
                        format: ISO 3166-1 alpha-2
  items:
    description: Lets you display the items in the customer’s order in a single line on your checkout page instead of including a `shopping_cart` object.
    type: string
    example: "<ol><li>Article 1: € 1,95</li><li>Article 2: € 2,95</li><li>Article 3: € 3,95</li></ol>"
  days_active:
    description: |
      Number of days the payment link is valid for.

      Applies only to `redirect`-type orders.

      If `seconds_active` is also set, `seconds_active` is used.
    type: integer
    minimum: 1
    default: 30
  seconds_active: 
    description: |
      Number of seconds the payment link is valid for.

      Applies only to `redirect`-type orders.

      If `days_active` is also set, `seconds_active` is used.
    type: integer
    minimum: 1
    default: 2592000
  plugin:
    description: Specifies information about your integration, useful for debugging.
    properties:
      shop:
        description: The ecommerce platform that you use.
        type: string
        example: "My custom-built ecommerce"
      plugin_version:
        description: The version of the plugin.
        type: string
        example: "1.0.0"
      shop_version: 
        description: The version of the ecommerce webshop you use.
        type: string
        example: ""
      partner: 
        description: The name of the third party that developed the ecommerce webshop.
        type: string
      shop_root_url:
        description: The root/base URL of the ecommerce webshop.
        type: string
        example: "https://www.my-ecommerce.com"
  affiliate:
    description: Settings related to affiliated MultiSafepay accounts
    type: object
    properties:
      split_payments:
        description: |
          Split the amount of a transaction between partner or affiliate accounts by a percentage, a fixed amount, or both.

          For every split payment rule, add an object to the array.
        type: array
        items:
          type: object
          properties:
            merchant: 
              description: The account ID of the MultiSafepay account
              type: string
              example: 1001001
            fixed: 
              description: Specify the amount to split in cents.
              type: integer
              minimum: 1
            percentage: 
              description: Specify a percentage of the amount to split.
              type: number
              format: float
              minimum: 1
            description: 
              description: The description of the split payment.
              type: string
  shopping_cart:
    description: |
      Array of items in the customer's shopping cart, including the tax class.

      If you have a custom integration, include the complete specification of the `shopping_cart`.
    type: object
    properties:
      items:
        description: |
          The items in the customer's shopping cart. 
        
          Specify the relevant tax ruling per item.
        type: array
        items:
          $ref: 'Item.yaml'
type: object
