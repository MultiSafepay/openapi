{
  "components": {
    "schemas": {
      "Account": {
        "additionalFields": false,
        "properties": {
          "address1": {
            "example": "Jodenbreestraat 4",
            "maxLength": 64,
            "type": "string"
          },
          "address2": {
            "maxLength": 64,
            "type": "string"
          },
          "address3": {
            "maxLength": 64,
            "type": "string"
          },
          "apartment": {
            "example": "2",
            "maxLength": 9,
            "type": "string"
          },
          "city": {
            "example": "Amsterdam",
            "maxLength": 50,
            "type": "string"
          },
          "coc_number": {
            "maxLength": 50,
            "type": "string"
          },
          "company_name": {
            "maxLength": 200,
            "type": "string"
          },
          "country": {
            "example": "NL",
            "format": "country-alpha2",
            "type": "string"
          },
          "email": {
            "example": "merchant@example.com",
            "format": "email",
            "maxLength": 100,
            "type": "string"
          },
          "fax": {
            "maxLength": 15,
            "type": "string"
          },
          "phone": {
            "maxLength": 15,
            "type": "string"
          },
          "vat_number": {
            "maxLength": 50,
            "type": "string"
          },
          "zipcode": {
            "example": "1011 NK",
            "maxLength": 30,
            "type": "string"
          }
        },
        "required": [
          "company_name",
          "email",
          "country"
        ],
        "type": "object"
      },
      "ApiUser": {
        "properties": {
          "merchant_id": {
            "type": "integer"
          },
          "role": {
            "type": "string"
          },
          "site_id": {
            "type": "integer"
          }
        },
        "required": [
          "merchant_id",
          "site_id"
        ],
        "type": "object"
      },
      "Balance": {
        "properties": {
          "account_id": {
            "type": "integer"
          },
          "amount_available": {
            "type": "integer"
          },
          "amount_reserved": {
            "type": "integer"
          },
          "currency": {
            "example": "EUR",
            "maxLength": 3,
            "minLength": 3,
            "type": "string"
          },
          "id": {
            "example": "Jodenbreestraat 4",
            "maxLength": 64,
            "type": "string"
          },
          "modified": {
            "format": "date",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BankAccount": {
        "additionalFields": false,
        "properties": {
          "currency": {
            "maxLength": 3,
            "type": "string"
          },
          "holder_name": {
            "maxLength": 40,
            "type": "string"
          },
          "iban": {
            "format": "iban",
            "type": "string"
          }
        },
        "required": [
          "holder_name",
          "iban",
          "currency"
        ],
        "type": "object"
      },
      "BankStatement": {
        "additionalFields": false,
        "properties": {
          "encoded_content": {
            "format": "base64-encoded-content",
            "type": "string"
          },
          "filename": {
            "example": "bank-statement.pdf",
            "maxLength": 250,
            "type": "string"
          },
          "mime_type": {
            "enum": [
              "application/pdf",
              "image/jpeg",
              "image/png"
            ],
            "type": "string"
          }
        },
        "required": [
          "filename",
          "mime_type",
          "encoded_content"
        ],
        "type": "object"
      },
      "Cursor": {
        "additionalProperties": false,
        "properties": {
          "after": {
            "type": "string"
          },
          "before": {
            "type": "string"
          },
          "cursor": {
            "after": {
              "type": "string"
            },
            "before": {
              "type": "string"
            }
          },
          "limit": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Customer": {
        "additionalProperties": false,
        "properties": {
          "address1": {
            "example": "Main ave.",
            "maxLength": 64,
            "type": "string"
          },
          "address2": {
            "maxLength": 64,
            "type": "string"
          },
          "address3": {
            "maxLength": 64,
            "type": "string"
          },
          "birthday": {
            "format": "date",
            "type": "string"
          },
          "brand": {
            "maxLength": 10,
            "type": "string"
          },
          "city": {
            "example": "Amsterdam",
            "maxLength": 50,
            "type": "string"
          },
          "country": {
            "example": "NL",
            "format": "country-alpha2",
            "type": "string"
          },
          "email": {
            "format": "email",
            "type": "string"
          },
          "first_name": {
            "example": "John",
            "maxLength": 25,
            "type": "string"
          },
          "forwarded_ip": {
            "format": "ipv4",
            "type": "string"
          },
          "gender": {
            "example": "M",
            "maxLength": 1,
            "type": "string"
          },
          "house_number": {
            "example": "1",
            "maxLength": 10,
            "type": "string"
          },
          "ip_address": {
            "format": "ipv4",
            "type": "string"
          },
          "last_name": {
            "example": "Doe",
            "maxLength": 25,
            "type": "string"
          },
          "locale": {
            "example": "NL",
            "maxLength": 2,
            "minLength": 2,
            "type": "string"
          },
          "mobile_phone": {
            "maxLength": 24,
            "type": "string"
          },
          "nickname": {
            "example": "johnny",
            "maxLength": 30,
            "type": "string"
          },
          "phone": {
            "maxLength": 24,
            "type": "string"
          },
          "prefix": {
            "maxLength": 10,
            "type": "string"
          },
          "state": {
            "maxLength": 6,
            "type": "string"
          },
          "title": {
            "example": "Mr",
            "maxLength": 10,
            "type": "string"
          },
          "zip_code": {
            "example": "AB1234",
            "maxLength": 10,
            "type": "string"
          }
        },
        "required": [
          "address1",
          "brand",
          "city",
          "country",
          "email",
          "first_name",
          "house_number",
          "last_name",
          "locale",
          "zip_code"
        ],
        "type": "object"
      },
      "CustomerPaymentMethod": {
        "additionalProperties": false,
        "oneOf": [
          {
            "properties": {
              "type": {
                "enum": [
                  "direct_debit"
                ]
              }
            },
            "required": [
              "direct_debit"
            ]
          }
        ],
        "properties": {
          "direct_debit": {
            "additionalProperties": false,
            "properties": {
              "bic": {
                "type": "string"
              },
              "holder_name": {
                "type": "string"
              },
              "iban": {
                "type": "string"
              }
            },
            "required": [
              "holder_name",
              "iban",
              "bic"
            ],
            "type": "object"
          },
          "status": {
            "enum": [
              "active"
            ],
            "type": "string"
          },
          "type": {
            "enum": [
              "direct_debit"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "status"
        ],
        "type": "object"
      },
      "DeliveryDetails": {
        "additionalProperties": false,
        "properties": {
          "address1": {
            "maxLength": 64,
            "type": "string"
          },
          "address2": {
            "maxLength": 64,
            "type": "string"
          },
          "address3": {
            "maxLength": 64,
            "type": "string"
          },
          "city": {
            "maxLength": 50,
            "type": "string"
          },
          "company_name": {
            "maxLength": 50,
            "type": "string"
          },
          "company_registration_number": {
            "maxLength": 25,
            "type": "string"
          },
          "country": {
            "format": "country-alpha2",
            "type": "string"
          },
          "email": {
            "format": "email",
            "type": "string"
          },
          "favorite": {
            "type": "boolean"
          },
          "first_name": {
            "maxLength": 25,
            "type": "string"
          },
          "house_number": {
            "maxLength": 10,
            "type": "string"
          },
          "last_name": {
            "maxLength": 25,
            "type": "string"
          },
          "mobile_phone": {
            "maxLength": 25,
            "type": "string"
          },
          "phone": {
            "maxLength": 25,
            "type": "string"
          },
          "status": {
            "enum": [
              "active",
              "disabled"
            ],
            "type": "string"
          },
          "title": {
            "maxLength": 15,
            "type": "string"
          },
          "zip_code": {
            "maxLength": 10,
            "type": "string"
          }
        },
        "required": [
          "address1",
          "city",
          "country",
          "first_name",
          "house_number",
          "last_name",
          "status",
          "zip_code"
        ],
        "type": "object"
      },
      "GenericErrorResponse": {
        "properties": {
          "message": {
            "example": "Not found",
            "type": "string"
          },
          "success": {
            "example": false,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "IdentityDoc": {
        "additionalFields": false,
        "properties": {
          "document_type": {
            "enum": [
              "id",
              "passport",
              "driverslicense",
              "proof_of_address"
            ],
            "type": "string"
          },
          "encoded_content": {
            "format": "base64-encoded-content",
            "type": "string"
          },
          "filename": {
            "maxLength": 250,
            "type": "string"
          },
          "mime_type": {
            "enum": [
              "application/pdf",
              "image/jpeg",
              "image/png"
            ],
            "type": "string"
          }
        },
        "required": [
          "filename",
          "mime_type",
          "encoded_content",
          "document_type"
        ],
        "type": "object"
      },
      "Invoice": {
        "additionalFields": false,
        "properties": {
          "due": {
            "format": "date",
            "type": "string"
          }
        },
        "required": [
          "due"
        ],
        "type": "object"
      },
      "Page": {
        "additionalProperties": false,
        "properties": {
          "total": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PaymentMethod": {
        "properties": {
          "allowed_amount": {
            "properties": {
              "max": {
                "example": 1000000,
                "type": "integer"
              },
              "min": {
                "example": 0,
                "type": "integer"
              }
            },
            "type": "object"
          },
          "allowed_apps": {
            "example": [
              "APIFCO"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "allowed_currencies": {
            "example": [
              "EUR",
              "USD",
              "GBP"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "brands": {
            "items": {
              "properties": {
                "icon_urls": {
                  "properties": {
                    "large": {
                      "example": "https://media.multisafepay.com/img/methods/3x/postepay.png",
                      "type": "string"
                    },
                    "medium": {
                      "example": "https://media.multisafepay.com/img/methods/2x/postepay.png",
                      "type": "string"
                    },
                    "vector": {
                      "example": "https://media.multisafepay.com/img/methods/svg/postepay.svg",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "example": "POSTEPAY",
                  "type": "string"
                },
                "name": {
                  "example": "PostePay",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "checkout_data_required": {
            "example": false,
            "type": "boolean"
          },
          "country_preferred": {
            "example": [
              "NL"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "extras": {
            "example": {
              "issuers": [
                {
                  "bic": "ABNANL2A",
                  "code": "0031",
                  "name": "ABN Amro Bank"
                }
              ]
            },
            "type": "object"
          },
          "icon_urls": {
            "properties": {
              "large": {
                "example": "https://media.multisafepay.com/img/methods/3x/visa.png",
                "type": "string"
              },
              "medium": {
                "example": "https://media.multisafepay.com/img/methods/2x/visa.png",
                "type": "string"
              },
              "vector": {
                "example": "https://media.multisafepay.com/img/methods/svg/visa.svg",
                "type": "string"
              }
            },
            "type": "object"
          },
          "id": {
            "example": "VISA",
            "type": "string"
          },
          "name": {
            "example": "Visa",
            "type": "string"
          },
          "required_fields": {
            "example": [],
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Plan": {
        "additionalFields": false,
        "properties": {
          "amount": {
            "minimum": 0,
            "type": "integer"
          },
          "currency": {
            "example": "EUR",
            "maxLength": 3,
            "minLength": 3,
            "type": "string"
          },
          "description": {
            "maxLength": 256,
            "type": "string"
          },
          "interval": {
            "enum": [
              "1 day",
              "1 week",
              "1 mon",
              "1 year"
            ],
            "example": "1 mon",
            "type": "string"
          },
          "interval_count": {
            "minimum": 0,
            "type": "integer"
          },
          "merchant_item_id": {
            "example": "item-1-2-3",
            "type": "string"
          },
          "name": {
            "maxLength": 64,
            "type": "string"
          },
          "status": {
            "enum": [
              "active",
              "hidden",
              "disabled"
            ],
            "type": "string"
          }
        },
        "required": [
          "interval",
          "interval_count",
          "merchant_item_id",
          "name",
          "status",
          "amount",
          "currency"
        ],
        "type": "object"
      },
      "Site": {
        "additionalFields": false,
        "properties": {
          "name": {
            "maxLength": 120,
            "type": "string"
          },
          "notification_url": {
            "format": "url",
            "maxLength": 150,
            "type": "string"
          },
          "price_from": {
            "type": "integer"
          },
          "price_till": {
            "type": "integer"
          },
          "support_email": {
            "format": "email",
            "maxLength": 100,
            "type": "string"
          },
          "support_phone": {
            "maxLength": 100,
            "type": "string"
          },
          "url": {
            "format": "url",
            "maxLength": 150,
            "type": "string"
          }
        },
        "required": [
          "name",
          "url"
        ],
        "type": "object"
      },
      "SubaccountCharge": {
        "additionalFields": false,
        "properties": {
          "amount": {
            "minimum": 0,
            "type": "integer"
          },
          "checkoutdata": {
            "format": "checkout-data",
            "type": "object"
          },
          "currency": {
            "example": "EUR",
            "maxLength": 3,
            "minLength": 3,
            "type": "string"
          },
          "description": {
            "example": "monthly commission",
            "maxLength": 512,
            "minLength": 2,
            "type": "string"
          },
          "order_id": {
            "example": "fa423fabc31915acd97dew89",
            "maxLength": 128,
            "type": "string"
          },
          "var1": {
            "example": "custom variable 1",
            "maxLength": 128,
            "type": "string"
          },
          "var2": {
            "example": "custom variable 2",
            "maxLength": 128,
            "type": "string"
          },
          "var3": {
            "example": "custom variable 3",
            "maxLength": 128,
            "type": "string"
          }
        },
        "required": [
          "amount",
          "currency",
          "description",
          "order_id"
        ],
        "type": "object"
      },
      "SubaccountPayout": {
        "additionalFields": false,
        "properties": {
          "amount": {
            "minimum": 0,
            "type": "integer"
          },
          "checkoutdata": {
            "format": "checkout-data",
            "type": "object"
          },
          "currency": {
            "example": "EUR",
            "maxLength": 3,
            "minLength": 3,
            "type": "string"
          },
          "description": {
            "example": "monthly commission",
            "maxLength": 512,
            "minLength": 2,
            "type": "string"
          },
          "order_id": {
            "example": "fa423fabc31915acd97dew89",
            "maxLength": 128,
            "type": "string"
          },
          "var1": {
            "example": "custom variable 1",
            "maxLength": 128,
            "type": "string"
          },
          "var2": {
            "example": "custom variable 2",
            "maxLength": 128,
            "type": "string"
          },
          "var3": {
            "example": "custom variable 3",
            "maxLength": 128,
            "type": "string"
          }
        },
        "required": [
          "amount",
          "currency",
          "description",
          "order_id"
        ],
        "type": "object"
      },
      "Subscription": {
        "additionalFields": false,
        "properties": {
          "allow_cancel_before_days": {
            "minimum": 0,
            "type": "integer"
          },
          "collecting_flow_id": {
            "minimum": 0,
            "type": "integer"
          },
          "collecting_method": {
            "enum": [
              "charge_automatically",
              "send_invoice"
            ],
            "type": "string"
          },
          "current_period_end": {
            "format": "date",
            "type": "string"
          },
          "current_period_start": {
            "format": "date",
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "delivery_details_id": {
            "type": "string"
          },
          "discount": {
            "properties": {
              "cap": {
                "minimum": 0,
                "type": "number"
              },
              "percent_off": {
                "maximum": 100,
                "minimum": 0,
                "type": "number"
              }
            },
            "type": "object"
          },
          "end_date": {
            "format": "date",
            "type": "string"
          },
          "items": {
            "properties": {
              "amount": {
                "minimum": 0,
                "type": "integer"
              },
              "checkout_options": {
                "properties": {
                  "tax_tables": {
                    "properties": {
                      "alternate": {
                        "items": {
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "rules": {
                              "items": {
                                "properties": {
                                  "rate": {
                                    "minimum": 0,
                                    "type": "number"
                                  },
                                  "shipping_taxed": {
                                    "type": "boolean"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "default": {
                        "properties": {
                          "rate": {
                            "minimum": 0,
                            "type": "number"
                          },
                          "shipping_taxed": {
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "currency": {
                "example": "EUR",
                "maxLength": 3,
                "minLength": 3,
                "type": "string"
              },
              "items": {
                "items": {
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "merchant_item_id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "plan_id": {
                      "type": "string"
                    },
                    "quantity": {
                      "minimum": 0,
                      "type": "number"
                    },
                    "tax_table_selector": {
                      "type": "string"
                    },
                    "unit_price": {
                      "type": "number"
                    },
                    "weight": {
                      "properties": {
                        "unit": {
                          "type": "string"
                        },
                        "value": {
                          "minimum": 0,
                          "type": "number"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "name",
                    "merchant_item_id",
                    "quantity",
                    "unit_price"
                  ],
                  "type": "object"
                },
                "type": "array"
              }
            },
            "required": [
              "amount",
              "currency"
            ],
            "type": "object"
          },
          "max_amount_outstanding": {
            "minimum": 0,
            "type": "number"
          },
          "max_amount_outstanding_currency": {
            "example": "EUR",
            "maxLength": 3,
            "minLength": 3,
            "type": "string"
          },
          "max_orders_outstanding": {
            "minimum": 0,
            "type": "integer"
          },
          "payment_method_id": {
            "type": "string"
          },
          "recurring_interval": {
            "enum": [
              "1 day",
              "1 week",
              "1 mon",
              "1 year"
            ],
            "example": "1 mon",
            "type": "string"
          },
          "recurring_interval_count": {
            "minimum": 0,
            "type": "integer"
          },
          "start_date": {
            "format": "date",
            "type": "string"
          },
          "status": {
            "enum": [
              "active",
              "inactive"
            ],
            "type": "string"
          }
        },
        "required": [
          "collecting_flow_id",
          "collecting_method",
          "customer_id",
          "delivery_details_id",
          "items",
          "payment_method_id",
          "start_date",
          "status"
        ],
        "type": "object"
      },
      "Transaction": {
        "properties": {
          "amount": {
            "example": 100,
            "type": "integer"
          },
          "completed": {
            "format": "datetime",
            "type": "string"
          },
          "costs": {
            "items": {
              "amount": {
                "type": "integer"
              },
              "description": {
                "type": "string"
              }
            },
            "type": "array"
          },
          "created": {
            "format": "datetime",
            "type": "string"
          },
          "currency": {
            "example": "EUR",
            "type": "string"
          },
          "customer": {
            "properties": {
              "email": {
                "type": "string"
              },
              "first_name": {
                "type": "string"
              },
              "iban": {
                "type": "string"
              },
              "last_name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "debit_credit": {
            "enum": [
              "D",
              "C"
            ],
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "financial_status": {
            "example": "completed",
            "type": "string"
          },
          "invoice_id": {
            "type": "string"
          },
          "order_id": {
            "type": "string"
          },
          "payment_method": {
            "example": "VISA",
            "type": "string"
          },
          "site_id": {
            "example": 123,
            "type": "integer"
          },
          "status": {
            "example": "completed",
            "type": "string"
          },
          "transaction_id": {
            "type": "integer"
          },
          "type": {
            "type": "string"
          },
          "updated": {
            "format": "datetime",
            "type": "string"
          },
          "var1": {
            "type": "string"
          },
          "var2": {
            "type": "string"
          },
          "var3": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Ubo": {
        "additionalFields": false,
        "properties": {
          "address": {
            "maxLength": 100,
            "type": "string"
          },
          "address_apartment": {
            "maxLength": 15,
            "type": "string"
          },
          "birthday": {
            "format": "yyyy-mm-dd",
            "type": "string"
          },
          "city": {
            "maxLength": 100,
            "type": "string"
          },
          "country": {
            "format": "country-alpha2",
            "type": "string"
          },
          "country_of_birth": {
            "format": "country-alpha2",
            "type": "string"
          },
          "email": {
            "format": "email",
            "maxLength": 100,
            "type": "string"
          },
          "fax": {
            "maxLength": 15,
            "type": "string"
          },
          "job_title": {
            "maxLength": 100,
            "type": "string"
          },
          "mobile_phone": {
            "maxLength": 25,
            "type": "string"
          },
          "name": {
            "maxLength": 200,
            "type": "string"
          },
          "office_phone": {
            "maxLength": 25,
            "type": "string"
          },
          "percentage": {
            "type": "integer"
          },
          "state": {
            "maxLength": 100,
            "type": "string"
          },
          "title": {
            "enum": [
              "mr",
              "mrs"
            ],
            "type": "string"
          },
          "type": {
            "enum": [
              "control_rights",
              "other",
              "shareholder",
              "voting_rights"
            ],
            "type": "string"
          },
          "zipcode": {
            "maxLength": 20,
            "type": "string"
          }
        },
        "required": [
          "type",
          "percentage",
          "title",
          "name",
          "birthday",
          "country_of_birth",
          "job_title",
          "email",
          "country"
        ],
        "type": "object"
      },
      "ValidationErrorResponse": {
        "properties": {
          "errors": {
            "items": {
              "properties": {
                "attribute": {
                  "example": "required",
                  "type": "string"
                },
                "details": {
                  "example": [
                    "(true)"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "message": {
                  "example": "Required",
                  "type": "string"
                },
                "uri": {
                  "example": "#/email",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "message": {
            "example": "Validation failed",
            "type": "string"
          },
          "success": {
            "example": false,
            "type": "boolean"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "title": "MultiSafepay API",
    "version": "1.0.0"
  },
  "openapi": "3.0.0",
  "paths": {
    "/accounts": {
      "get": {
        "description": "List all accounts signed up by a partner",
        "operationId": "Partner::ListAccounts",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "additionalFields": false,
                        "properties": {
                          "address1": {
                            "example": "Jodenbreestraat 4",
                            "maxLength": 64,
                            "type": "string"
                          },
                          "address2": {
                            "maxLength": 64,
                            "type": "string"
                          },
                          "address3": {
                            "maxLength": 64,
                            "type": "string"
                          },
                          "apartment": {
                            "example": "2",
                            "maxLength": 9,
                            "type": "string"
                          },
                          "city": {
                            "example": "Amsterdam",
                            "maxLength": 50,
                            "type": "string"
                          },
                          "coc_number": {
                            "maxLength": 50,
                            "type": "string"
                          },
                          "company_name": {
                            "maxLength": 200,
                            "type": "string"
                          },
                          "country": {
                            "example": "NL",
                            "format": "country-alpha2",
                            "type": "string"
                          },
                          "email": {
                            "example": "merchant@example.com",
                            "format": "email",
                            "maxLength": 100,
                            "type": "string"
                          },
                          "fax": {
                            "maxLength": 15,
                            "type": "string"
                          },
                          "phone": {
                            "maxLength": 15,
                            "type": "string"
                          },
                          "vat_number": {
                            "maxLength": 50,
                            "type": "string"
                          },
                          "zipcode": {
                            "example": "1011 NK",
                            "maxLength": 30,
                            "type": "string"
                          }
                        },
                        "required": [
                          "company_name",
                          "email",
                          "country"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          }
        },
        "summary": "List Accounts (BETA)",
        "tags": [
          "Onboarding (BETA)"
        ]
      }
    },
    "/accounts/{account_id}": {
      "get": {
        "description": "Fetch information about an existing account",
        "operationId": "Partner::GetAccount",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "additionalFields": false,
                      "properties": {
                        "address1": {
                          "example": "Jodenbreestraat 4",
                          "maxLength": 64,
                          "type": "string"
                        },
                        "address2": {
                          "maxLength": 64,
                          "type": "string"
                        },
                        "address3": {
                          "maxLength": 64,
                          "type": "string"
                        },
                        "apartment": {
                          "example": "2",
                          "maxLength": 9,
                          "type": "string"
                        },
                        "city": {
                          "example": "Amsterdam",
                          "maxLength": 50,
                          "type": "string"
                        },
                        "coc_number": {
                          "maxLength": 50,
                          "type": "string"
                        },
                        "company_name": {
                          "maxLength": 200,
                          "type": "string"
                        },
                        "country": {
                          "example": "NL",
                          "format": "country-alpha2",
                          "type": "string"
                        },
                        "email": {
                          "example": "merchant@example.com",
                          "format": "email",
                          "maxLength": 100,
                          "type": "string"
                        },
                        "fax": {
                          "maxLength": 15,
                          "type": "string"
                        },
                        "phone": {
                          "maxLength": 15,
                          "type": "string"
                        },
                        "vat_number": {
                          "maxLength": 50,
                          "type": "string"
                        },
                        "zipcode": {
                          "example": "1011 NK",
                          "maxLength": 30,
                          "type": "string"
                        }
                      },
                      "required": [
                        "company_name",
                        "email",
                        "country"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorResponse"
                }
              }
            },
            "description": "Account not found"
          }
        },
        "summary": "Get Account (BETA)",
        "tags": [
          "Onboarding (BETA)"
        ]
      },
      "patch": {
        "description": "Update information about an existing merchant account",
        "operationId": "Partner::UpdateAccount",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalFields": false,
                "properties": {
                  "address1": {
                    "example": "Jodenbreestraat 4",
                    "maxLength": 64,
                    "type": "string"
                  },
                  "address2": {
                    "maxLength": 64,
                    "type": "string"
                  },
                  "address3": {
                    "maxLength": 64,
                    "type": "string"
                  },
                  "apartment": {
                    "example": "2",
                    "maxLength": 9,
                    "type": "string"
                  },
                  "city": {
                    "example": "Amsterdam",
                    "maxLength": 50,
                    "type": "string"
                  },
                  "coc_number": {
                    "maxLength": 50,
                    "type": "string"
                  },
                  "company_name": {
                    "maxLength": 200,
                    "type": "string"
                  },
                  "country": {
                    "example": "NL",
                    "format": "country-alpha2",
                    "type": "string"
                  },
                  "email": {
                    "example": "merchant@example.com",
                    "format": "email",
                    "maxLength": 100,
                    "type": "string"
                  },
                  "fax": {
                    "maxLength": 15,
                    "type": "string"
                  },
                  "phone": {
                    "maxLength": 15,
                    "type": "string"
                  },
                  "vat_number": {
                    "maxLength": 50,
                    "type": "string"
                  },
                  "zipcode": {
                    "example": "1011 NK",
                    "maxLength": 30,
                    "type": "string"
                  }
                },
                "required": [],
                "type": "object"
              }
            }
          },
          "description": "",
          "required": 1
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "additionalFields": false,
                      "properties": {
                        "address1": {
                          "example": "Jodenbreestraat 4",
                          "maxLength": 64,
                          "type": "string"
                        },
                        "address2": {
                          "maxLength": 64,
                          "type": "string"
                        },
                        "address3": {
                          "maxLength": 64,
                          "type": "string"
                        },
                        "apartment": {
                          "example": "2",
                          "maxLength": 9,
                          "type": "string"
                        },
                        "city": {
                          "example": "Amsterdam",
                          "maxLength": 50,
                          "type": "string"
                        },
                        "coc_number": {
                          "maxLength": 50,
                          "type": "string"
                        },
                        "company_name": {
                          "maxLength": 200,
                          "type": "string"
                        },
                        "country": {
                          "example": "NL",
                          "format": "country-alpha2",
                          "type": "string"
                        },
                        "email": {
                          "example": "merchant@example.com",
                          "format": "email",
                          "maxLength": 100,
                          "type": "string"
                        },
                        "fax": {
                          "maxLength": 15,
                          "type": "string"
                        },
                        "phone": {
                          "maxLength": 15,
                          "type": "string"
                        },
                        "vat_number": {
                          "maxLength": 50,
                          "type": "string"
                        },
                        "zipcode": {
                          "example": "1011 NK",
                          "maxLength": 30,
                          "type": "string"
                        }
                      },
                      "required": [
                        "company_name",
                        "email",
                        "country"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorResponse"
                }
              }
            },
            "description": "Account not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            },
            "description": "Validation errors"
          }
        },
        "summary": "Update Account (BETA)",
        "tags": [
          "Onboarding (BETA)"
        ]
      }
    },
    "/accounts/{account_id}/balances": {
      "get": {
        "description": "",
        "operationId": "Partner::ListAccountBalances",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Limit number of returned results",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "description": "Limit number of returned results",
              "example": 5,
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Return results starting from offset position",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "description": "Return results starting from offset position",
              "example": 5,
              "minimum": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "properties": {
                          "account_id": {
                            "type": "integer"
                          },
                          "amount_available": {
                            "type": "integer"
                          },
                          "amount_reserved": {
                            "type": "integer"
                          },
                          "currency": {
                            "example": "EUR",
                            "maxLength": 3,
                            "minLength": 3,
                            "type": "string"
                          },
                          "id": {
                            "example": "Jodenbreestraat 4",
                            "maxLength": 64,
                            "type": "string"
                          },
                          "modified": {
                            "format": "date",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "page": {
                      "additionalProperties": false,
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          }
        },
        "summary": "List Account Balances (BETA)",
        "tags": [
          "Finance (BETA)"
        ]
      }
    },
    "/accounts/{account_id}/bank-accounts": {
      "get": {
        "description": "List all bank accounts linked to a merchant account",
        "operationId": "Partner::ListAccountBankAccounts",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "additionalFields": false,
                        "properties": {
                          "currency": {
                            "maxLength": 3,
                            "type": "string"
                          },
                          "holder_name": {
                            "maxLength": 40,
                            "type": "string"
                          },
                          "iban": {
                            "format": "iban",
                            "type": "string"
                          }
                        },
                        "required": [
                          "holder_name",
                          "iban",
                          "currency"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorResponse"
                }
              }
            },
            "description": "Merchant not found"
          }
        },
        "summary": "List Bank Accounts (BETA)",
        "tags": [
          "Onboarding (BETA)"
        ]
      },
      "post": {
        "description": "Create a bank account",
        "operationId": "Partner::CreateAccountBankAccount",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalFields": false,
                "properties": {
                  "currency": {
                    "maxLength": 3,
                    "type": "string"
                  },
                  "holder_name": {
                    "maxLength": 40,
                    "type": "string"
                  },
                  "iban": {
                    "format": "iban",
                    "type": "string"
                  }
                },
                "required": [
                  "holder_name",
                  "iban",
                  "currency"
                ],
                "type": "object"
              }
            }
          },
          "description": "",
          "required": 1
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "additionalFields": false,
                      "properties": {
                        "currency": {
                          "maxLength": 3,
                          "type": "string"
                        },
                        "holder_name": {
                          "maxLength": 40,
                          "type": "string"
                        },
                        "iban": {
                          "format": "iban",
                          "type": "string"
                        }
                      },
                      "required": [
                        "holder_name",
                        "iban",
                        "currency"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorResponse"
                }
              }
            },
            "description": "Account not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            },
            "description": "Validation errors"
          }
        },
        "summary": "Create a Bank Account (BETA)",
        "tags": [
          "Onboarding (BETA)"
        ]
      }
    },
    "/accounts/{account_id}/charges": {
      "post": {
        "description": "",
        "operationId": "Partner::CreateChargeForSubaccount",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalFields": false,
                "properties": {
                  "amount": {
                    "minimum": 0,
                    "type": "integer"
                  },
                  "checkoutdata": {
                    "format": "checkout-data",
                    "type": "object"
                  },
                  "currency": {
                    "example": "EUR",
                    "maxLength": 3,
                    "minLength": 3,
                    "type": "string"
                  },
                  "description": {
                    "example": "monthly commission",
                    "maxLength": 512,
                    "minLength": 2,
                    "type": "string"
                  },
                  "order_id": {
                    "example": "fa423fabc31915acd97dew89",
                    "maxLength": 128,
                    "type": "string"
                  },
                  "var1": {
                    "example": "custom variable 1",
                    "maxLength": 128,
                    "type": "string"
                  },
                  "var2": {
                    "example": "custom variable 2",
                    "maxLength": 128,
                    "type": "string"
                  },
                  "var3": {
                    "example": "custom variable 3",
                    "maxLength": 128,
                    "type": "string"
                  }
                },
                "required": [
                  "amount",
                  "currency",
                  "description",
                  "order_id"
                ],
                "type": "object"
              }
            }
          },
          "description": "",
          "required": 1
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "additionalFields": false,
                      "properties": {
                        "amount": {
                          "minimum": 0,
                          "type": "integer"
                        },
                        "checkoutdata": {
                          "format": "checkout-data",
                          "type": "object"
                        },
                        "currency": {
                          "example": "EUR",
                          "maxLength": 3,
                          "minLength": 3,
                          "type": "string"
                        },
                        "description": {
                          "example": "monthly commission",
                          "maxLength": 512,
                          "minLength": 2,
                          "type": "string"
                        },
                        "order_id": {
                          "example": "fa423fabc31915acd97dew89",
                          "maxLength": 128,
                          "type": "string"
                        },
                        "var1": {
                          "example": "custom variable 1",
                          "maxLength": 128,
                          "type": "string"
                        },
                        "var2": {
                          "example": "custom variable 2",
                          "maxLength": 128,
                          "type": "string"
                        },
                        "var3": {
                          "example": "custom variable 3",
                          "maxLength": 128,
                          "type": "string"
                        }
                      },
                      "required": [
                        "amount",
                        "currency",
                        "description",
                        "order_id"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            },
            "description": "Validation errors"
          }
        },
        "summary": "Charge subaccount (BETA)",
        "tags": [
          "Subscriptions (BETA)"
        ]
      }
    },
    "/accounts/{account_id}/payouts": {
      "post": {
        "description": "",
        "operationId": "Partner::CreatePayoutForSubaccount",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalFields": false,
                "properties": {
                  "amount": {
                    "minimum": 0,
                    "type": "integer"
                  },
                  "checkoutdata": {
                    "format": "checkout-data",
                    "type": "object"
                  },
                  "currency": {
                    "example": "EUR",
                    "maxLength": 3,
                    "minLength": 3,
                    "type": "string"
                  },
                  "description": {
                    "example": "monthly commission",
                    "maxLength": 512,
                    "minLength": 2,
                    "type": "string"
                  },
                  "order_id": {
                    "example": "fa423fabc31915acd97dew89",
                    "maxLength": 128,
                    "type": "string"
                  },
                  "var1": {
                    "example": "custom variable 1",
                    "maxLength": 128,
                    "type": "string"
                  },
                  "var2": {
                    "example": "custom variable 2",
                    "maxLength": 128,
                    "type": "string"
                  },
                  "var3": {
                    "example": "custom variable 3",
                    "maxLength": 128,
                    "type": "string"
                  }
                },
                "required": [
                  "amount",
                  "currency",
                  "description",
                  "order_id"
                ],
                "type": "object"
              }
            }
          },
          "description": "",
          "required": 1
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "additionalFields": false,
                      "properties": {
                        "amount": {
                          "minimum": 0,
                          "type": "integer"
                        },
                        "checkoutdata": {
                          "format": "checkout-data",
                          "type": "object"
                        },
                        "currency": {
                          "example": "EUR",
                          "maxLength": 3,
                          "minLength": 3,
                          "type": "string"
                        },
                        "description": {
                          "example": "monthly commission",
                          "maxLength": 512,
                          "minLength": 2,
                          "type": "string"
                        },
                        "order_id": {
                          "example": "fa423fabc31915acd97dew89",
                          "maxLength": 128,
                          "type": "string"
                        },
                        "var1": {
                          "example": "custom variable 1",
                          "maxLength": 128,
                          "type": "string"
                        },
                        "var2": {
                          "example": "custom variable 2",
                          "maxLength": 128,
                          "type": "string"
                        },
                        "var3": {
                          "example": "custom variable 3",
                          "maxLength": 128,
                          "type": "string"
                        }
                      },
                      "required": [
                        "amount",
                        "currency",
                        "description",
                        "order_id"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            },
            "description": "Validation errors"
          }
        },
        "summary": "Do payout on behalf of a subaccount (BETA)",
        "tags": [
          "Subscriptions (BETA)"
        ]
      }
    },
    "/accounts/{account_id}/sites": {
      "get": {
        "description": "List all sites belonging to a merchant account",
        "operationId": "Partner::ListAccountSites",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "additionalFields": false,
                        "properties": {
                          "name": {
                            "maxLength": 120,
                            "type": "string"
                          },
                          "notification_url": {
                            "format": "url",
                            "maxLength": 150,
                            "type": "string"
                          },
                          "price_from": {
                            "type": "integer"
                          },
                          "price_till": {
                            "type": "integer"
                          },
                          "support_email": {
                            "format": "email",
                            "maxLength": 100,
                            "type": "string"
                          },
                          "support_phone": {
                            "maxLength": 100,
                            "type": "string"
                          },
                          "url": {
                            "format": "url",
                            "maxLength": 150,
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "url"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          }
        },
        "summary": "List Merchant Account Sites (BETA)",
        "tags": [
          "Onboarding (BETA)"
        ]
      },
      "post": {
        "description": "Create a new site for merchant account",
        "operationId": "Partner::CreateAccountSite",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalFields": false,
                "properties": {
                  "name": {
                    "maxLength": 120,
                    "type": "string"
                  },
                  "notification_url": {
                    "format": "url",
                    "maxLength": 150,
                    "type": "string"
                  },
                  "price_from": {
                    "type": "integer"
                  },
                  "price_till": {
                    "type": "integer"
                  },
                  "support_email": {
                    "format": "email",
                    "maxLength": 100,
                    "type": "string"
                  },
                  "support_phone": {
                    "maxLength": 100,
                    "type": "string"
                  },
                  "url": {
                    "format": "url",
                    "maxLength": 150,
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "url"
                ],
                "type": "object"
              }
            }
          },
          "description": "",
          "required": 1
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "additionalFields": false,
                      "properties": {
                        "name": {
                          "maxLength": 120,
                          "type": "string"
                        },
                        "notification_url": {
                          "format": "url",
                          "maxLength": 150,
                          "type": "string"
                        },
                        "price_from": {
                          "type": "integer"
                        },
                        "price_till": {
                          "type": "integer"
                        },
                        "support_email": {
                          "format": "email",
                          "maxLength": 100,
                          "type": "string"
                        },
                        "support_phone": {
                          "maxLength": 100,
                          "type": "string"
                        },
                        "url": {
                          "format": "url",
                          "maxLength": 150,
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "url"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            },
            "description": "Validation errors"
          }
        },
        "summary": "Create Account Site (BETA)",
        "tags": [
          "Onboarding (BETA)"
        ]
      }
    },
    "/accounts/{account_id}/ubos": {
      "get": {
        "description": "List all ultimate beneficiary owners for a merchant account",
        "operationId": "Partner::ListAccountUbos",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "additionalFields": false,
                        "properties": {
                          "address": {
                            "maxLength": 100,
                            "type": "string"
                          },
                          "address_apartment": {
                            "maxLength": 15,
                            "type": "string"
                          },
                          "birthday": {
                            "format": "yyyy-mm-dd",
                            "type": "string"
                          },
                          "city": {
                            "maxLength": 100,
                            "type": "string"
                          },
                          "country": {
                            "format": "country-alpha2",
                            "type": "string"
                          },
                          "country_of_birth": {
                            "format": "country-alpha2",
                            "type": "string"
                          },
                          "email": {
                            "format": "email",
                            "maxLength": 100,
                            "type": "string"
                          },
                          "fax": {
                            "maxLength": 15,
                            "type": "string"
                          },
                          "job_title": {
                            "maxLength": 100,
                            "type": "string"
                          },
                          "mobile_phone": {
                            "maxLength": 25,
                            "type": "string"
                          },
                          "name": {
                            "maxLength": 200,
                            "type": "string"
                          },
                          "office_phone": {
                            "maxLength": 25,
                            "type": "string"
                          },
                          "percentage": {
                            "type": "integer"
                          },
                          "state": {
                            "maxLength": 100,
                            "type": "string"
                          },
                          "title": {
                            "enum": [
                              "mr",
                              "mrs"
                            ],
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "control_rights",
                              "other",
                              "shareholder",
                              "voting_rights"
                            ],
                            "type": "string"
                          },
                          "zipcode": {
                            "maxLength": 20,
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "percentage",
                          "title",
                          "name",
                          "birthday",
                          "country_of_birth",
                          "job_title",
                          "email",
                          "country"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          }
        },
        "summary": "List UBOs (BETA)",
        "tags": [
          "Onboarding (BETA)"
        ]
      },
      "post": {
        "description": "Create an ultimate beneficiary owner",
        "operationId": "Partner::CreateAccountUbo",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalFields": false,
                "properties": {
                  "address": {
                    "maxLength": 100,
                    "type": "string"
                  },
                  "address_apartment": {
                    "maxLength": 15,
                    "type": "string"
                  },
                  "birthday": {
                    "format": "yyyy-mm-dd",
                    "type": "string"
                  },
                  "city": {
                    "maxLength": 100,
                    "type": "string"
                  },
                  "country": {
                    "format": "country-alpha2",
                    "type": "string"
                  },
                  "country_of_birth": {
                    "format": "country-alpha2",
                    "type": "string"
                  },
                  "email": {
                    "format": "email",
                    "maxLength": 100,
                    "type": "string"
                  },
                  "fax": {
                    "maxLength": 15,
                    "type": "string"
                  },
                  "job_title": {
                    "maxLength": 100,
                    "type": "string"
                  },
                  "mobile_phone": {
                    "maxLength": 25,
                    "type": "string"
                  },
                  "name": {
                    "maxLength": 200,
                    "type": "string"
                  },
                  "office_phone": {
                    "maxLength": 25,
                    "type": "string"
                  },
                  "percentage": {
                    "type": "integer"
                  },
                  "state": {
                    "maxLength": 100,
                    "type": "string"
                  },
                  "title": {
                    "enum": [
                      "mr",
                      "mrs"
                    ],
                    "type": "string"
                  },
                  "type": {
                    "enum": [
                      "control_rights",
                      "other",
                      "shareholder",
                      "voting_rights"
                    ],
                    "type": "string"
                  },
                  "zipcode": {
                    "maxLength": 20,
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "percentage",
                  "title",
                  "name",
                  "birthday",
                  "country_of_birth",
                  "job_title",
                  "email",
                  "country"
                ],
                "type": "object"
              }
            }
          },
          "description": "",
          "required": 1
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "additionalFields": false,
                      "properties": {
                        "address": {
                          "maxLength": 100,
                          "type": "string"
                        },
                        "address_apartment": {
                          "maxLength": 15,
                          "type": "string"
                        },
                        "birthday": {
                          "format": "yyyy-mm-dd",
                          "type": "string"
                        },
                        "city": {
                          "maxLength": 100,
                          "type": "string"
                        },
                        "country": {
                          "format": "country-alpha2",
                          "type": "string"
                        },
                        "country_of_birth": {
                          "format": "country-alpha2",
                          "type": "string"
                        },
                        "email": {
                          "format": "email",
                          "maxLength": 100,
                          "type": "string"
                        },
                        "fax": {
                          "maxLength": 15,
                          "type": "string"
                        },
                        "job_title": {
                          "maxLength": 100,
                          "type": "string"
                        },
                        "mobile_phone": {
                          "maxLength": 25,
                          "type": "string"
                        },
                        "name": {
                          "maxLength": 200,
                          "type": "string"
                        },
                        "office_phone": {
                          "maxLength": 25,
                          "type": "string"
                        },
                        "percentage": {
                          "type": "integer"
                        },
                        "state": {
                          "maxLength": 100,
                          "type": "string"
                        },
                        "title": {
                          "enum": [
                            "mr",
                            "mrs"
                          ],
                          "type": "string"
                        },
                        "type": {
                          "enum": [
                            "control_rights",
                            "other",
                            "shareholder",
                            "voting_rights"
                          ],
                          "type": "string"
                        },
                        "zipcode": {
                          "maxLength": 20,
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "percentage",
                        "title",
                        "name",
                        "birthday",
                        "country_of_birth",
                        "job_title",
                        "email",
                        "country"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorResponse"
                }
              }
            },
            "description": "Account not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            },
            "description": "Validation errors"
          }
        },
        "summary": "Create a UBO (BETA)",
        "tags": [
          "Onboarding (BETA)"
        ]
      }
    },
    "/bank-accounts/{bankaccount_id}": {
      "get": {
        "description": "Fetch information about an existing bank account",
        "operationId": "GetBankAccount",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "bankaccount_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "additionalFields": false,
                      "properties": {
                        "currency": {
                          "maxLength": 3,
                          "type": "string"
                        },
                        "holder_name": {
                          "maxLength": 40,
                          "type": "string"
                        },
                        "iban": {
                          "format": "iban",
                          "type": "string"
                        }
                      },
                      "required": [
                        "holder_name",
                        "iban",
                        "currency"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorResponse"
                }
              }
            },
            "description": "Bank account not found"
          }
        },
        "summary": "Get Bank Account (BETA)",
        "tags": [
          "Onboarding (BETA)"
        ]
      }
    },
    "/bank-accounts/{bankaccount_id}/bank-statements": {
      "get": {
        "description": "List all bank statements linked to a bank account",
        "operationId": "ListBankStatements",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "bankaccount_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "additionalFields": false,
                        "properties": {
                          "encoded_content": {
                            "format": "base64-encoded-content",
                            "type": "string"
                          },
                          "filename": {
                            "example": "bank-statement.pdf",
                            "maxLength": 250,
                            "type": "string"
                          },
                          "mime_type": {
                            "enum": [
                              "application/pdf",
                              "image/jpeg",
                              "image/png"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "filename",
                          "mime_type",
                          "encoded_content"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorResponse"
                }
              }
            },
            "description": "Bank account not found"
          }
        },
        "summary": "List Bank Statements (BETA)",
        "tags": [
          "Onboarding (BETA)"
        ]
      },
      "post": {
        "description": "Upload a bank statement for a previously created bank account",
        "operationId": "CreateBankStatement",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "bankaccount_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalFields": false,
                "properties": {
                  "encoded_content": {
                    "format": "base64-encoded-content",
                    "type": "string"
                  },
                  "filename": {
                    "example": "bank-statement.pdf",
                    "maxLength": 250,
                    "type": "string"
                  },
                  "mime_type": {
                    "enum": [
                      "application/pdf",
                      "image/jpeg",
                      "image/png"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "filename",
                  "mime_type",
                  "encoded_content"
                ],
                "type": "object"
              }
            }
          },
          "description": "",
          "required": 1
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "additionalFields": false,
                      "properties": {
                        "encoded_content": {
                          "format": "base64-encoded-content",
                          "type": "string"
                        },
                        "filename": {
                          "example": "bank-statement.pdf",
                          "maxLength": 250,
                          "type": "string"
                        },
                        "mime_type": {
                          "enum": [
                            "application/pdf",
                            "image/jpeg",
                            "image/png"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "filename",
                        "mime_type",
                        "encoded_content"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorResponse"
                }
              }
            },
            "description": "Bank account not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            },
            "description": "Validation errors"
          }
        },
        "summary": "Create a Bank Statement (BETA)",
        "tags": [
          "Onboarding (BETA)"
        ]
      }
    },
    "/bank-accounts/{bankaccount_id}/payment-links": {
      "post": {
        "description": "Create a payment link for a refundable 1 EUR transfer confirming bank account ownership",
        "operationId": "CreatePaymentLink",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "bankaccount_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "paymentlink": {
                        "bankaccount_id": "string",
                        "payment_link": "string"
                      }
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorResponse"
                }
              }
            },
            "description": "Bank account not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            },
            "description": "Validation errors"
          }
        },
        "summary": "Create a Payment Link (BETA)",
        "tags": [
          "Onboarding (BETA)"
        ]
      }
    },
    "/bank-statements/{bankstatement_id}": {
      "get": {
        "description": "Fetch information about an uploaded bank statement",
        "operationId": "GetBankStatement",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "bankstatement_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "additionalFields": false,
                      "properties": {
                        "encoded_content": {
                          "format": "base64-encoded-content",
                          "type": "string"
                        },
                        "filename": {
                          "example": "bank-statement.pdf",
                          "maxLength": 250,
                          "type": "string"
                        },
                        "mime_type": {
                          "enum": [
                            "application/pdf",
                            "image/jpeg",
                            "image/png"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "filename",
                        "mime_type",
                        "encoded_content"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorResponse"
                }
              }
            },
            "description": "Bank statement not found"
          }
        },
        "summary": "Get Bank Statement (BETA)",
        "tags": [
          "Onboarding (BETA)"
        ]
      }
    },
    "/creditcard/bin": {
      "get": {
        "description": "",
        "operationId": "CreditCard::Bin",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "bin",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "card_brand": {
                        "type": "string"
                      },
                      "card_number_length": {
                        "max": {
                          "type": "integer"
                        },
                        "min": {
                          "type": "integer"
                        }
                      },
                      "cvv_requried": {
                        "type": "boolean"
                      },
                      "payment_type": {
                        "type": "string"
                      }
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          }
        },
        "summary": "Credit card info by BIN",
        "tags": [
          "Credit Cards"
        ]
      }
    },
    "/customers": {
      "get": {
        "description": "",
        "operationId": "ListCustomers",
        "parameters": [
          {
            "description": "Limit number of returned results",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "description": "Limit number of returned results",
              "example": 5,
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Return results starting from offset position",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "description": "Return results starting from offset position",
              "example": 5,
              "minimum": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "address1": {
                            "example": "Main ave.",
                            "maxLength": 64,
                            "type": "string"
                          },
                          "address2": {
                            "maxLength": 64,
                            "type": "string"
                          },
                          "address3": {
                            "maxLength": 64,
                            "type": "string"
                          },
                          "birthday": {
                            "format": "date",
                            "type": "string"
                          },
                          "brand": {
                            "maxLength": 10,
                            "type": "string"
                          },
                          "city": {
                            "example": "Amsterdam",
                            "maxLength": 50,
                            "type": "string"
                          },
                          "country": {
                            "example": "NL",
                            "format": "country-alpha2",
                            "type": "string"
                          },
                          "email": {
                            "format": "email",
                            "type": "string"
                          },
                          "first_name": {
                            "example": "John",
                            "maxLength": 25,
                            "type": "string"
                          },
                          "forwarded_ip": {
                            "format": "ipv4",
                            "type": "string"
                          },
                          "gender": {
                            "example": "M",
                            "maxLength": 1,
                            "type": "string"
                          },
                          "house_number": {
                            "example": "1",
                            "maxLength": 10,
                            "type": "string"
                          },
                          "ip_address": {
                            "format": "ipv4",
                            "type": "string"
                          },
                          "last_name": {
                            "example": "Doe",
                            "maxLength": 25,
                            "type": "string"
                          },
                          "locale": {
                            "example": "NL",
                            "maxLength": 2,
                            "minLength": 2,
                            "type": "string"
                          },
                          "mobile_phone": {
                            "maxLength": 24,
                            "type": "string"
                          },
                          "nickname": {
                            "example": "johnny",
                            "maxLength": 30,
                            "type": "string"
                          },
                          "phone": {
                            "maxLength": 24,
                            "type": "string"
                          },
                          "prefix": {
                            "maxLength": 10,
                            "type": "string"
                          },
                          "state": {
                            "maxLength": 6,
                            "type": "string"
                          },
                          "title": {
                            "example": "Mr",
                            "maxLength": 10,
                            "type": "string"
                          },
                          "zip_code": {
                            "example": "AB1234",
                            "maxLength": 10,
                            "type": "string"
                          }
                        },
                        "required": [
                          "address1",
                          "brand",
                          "city",
                          "country",
                          "email",
                          "first_name",
                          "house_number",
                          "last_name",
                          "locale",
                          "zip_code"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "page": {
                      "additionalProperties": false,
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          }
        },
        "summary": "List Customers (BETA)",
        "tags": [
          "Customers (BETA)"
        ]
      },
      "post": {
        "description": "Create a new customer",
        "operationId": "CreateCustomer",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "address1": {
                    "example": "Main ave.",
                    "maxLength": 64,
                    "type": "string"
                  },
                  "address2": {
                    "maxLength": 64,
                    "type": "string"
                  },
                  "address3": {
                    "maxLength": 64,
                    "type": "string"
                  },
                  "birthday": {
                    "format": "date",
                    "type": "string"
                  },
                  "brand": {
                    "maxLength": 10,
                    "type": "string"
                  },
                  "city": {
                    "example": "Amsterdam",
                    "maxLength": 50,
                    "type": "string"
                  },
                  "country": {
                    "example": "NL",
                    "format": "country-alpha2",
                    "type": "string"
                  },
                  "email": {
                    "format": "email",
                    "type": "string"
                  },
                  "first_name": {
                    "example": "John",
                    "maxLength": 25,
                    "type": "string"
                  },
                  "forwarded_ip": {
                    "format": "ipv4",
                    "type": "string"
                  },
                  "gender": {
                    "example": "M",
                    "maxLength": 1,
                    "type": "string"
                  },
                  "house_number": {
                    "example": "1",
                    "maxLength": 10,
                    "type": "string"
                  },
                  "ip_address": {
                    "format": "ipv4",
                    "type": "string"
                  },
                  "last_name": {
                    "example": "Doe",
                    "maxLength": 25,
                    "type": "string"
                  },
                  "locale": {
                    "example": "NL",
                    "maxLength": 2,
                    "minLength": 2,
                    "type": "string"
                  },
                  "mobile_phone": {
                    "maxLength": 24,
                    "type": "string"
                  },
                  "nickname": {
                    "example": "johnny",
                    "maxLength": 30,
                    "type": "string"
                  },
                  "phone": {
                    "maxLength": 24,
                    "type": "string"
                  },
                  "prefix": {
                    "maxLength": 10,
                    "type": "string"
                  },
                  "state": {
                    "maxLength": 6,
                    "type": "string"
                  },
                  "title": {
                    "example": "Mr",
                    "maxLength": 10,
                    "type": "string"
                  },
                  "zip_code": {
                    "example": "AB1234",
                    "maxLength": 10,
                    "type": "string"
                  }
                },
                "required": [
                  "address1",
                  "brand",
                  "city",
                  "country",
                  "email",
                  "first_name",
                  "house_number",
                  "last_name",
                  "locale",
                  "zip_code"
                ],
                "type": "object"
              }
            }
          },
          "description": "",
          "required": 1
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "additionalProperties": false,
                      "properties": {
                        "address1": {
                          "example": "Main ave.",
                          "maxLength": 64,
                          "type": "string"
                        },
                        "address2": {
                          "maxLength": 64,
                          "type": "string"
                        },
                        "address3": {
                          "maxLength": 64,
                          "type": "string"
                        },
                        "birthday": {
                          "format": "date",
                          "type": "string"
                        },
                        "brand": {
                          "maxLength": 10,
                          "type": "string"
                        },
                        "city": {
                          "example": "Amsterdam",
                          "maxLength": 50,
                          "type": "string"
                        },
                        "country": {
                          "example": "NL",
                          "format": "country-alpha2",
                          "type": "string"
                        },
                        "email": {
                          "format": "email",
                          "type": "string"
                        },
                        "first_name": {
                          "example": "John",
                          "maxLength": 25,
                          "type": "string"
                        },
                        "forwarded_ip": {
                          "format": "ipv4",
                          "type": "string"
                        },
                        "gender": {
                          "example": "M",
                          "maxLength": 1,
                          "type": "string"
                        },
                        "house_number": {
                          "example": "1",
                          "maxLength": 10,
                          "type": "string"
                        },
                        "ip_address": {
                          "format": "ipv4",
                          "type": "string"
                        },
                        "last_name": {
                          "example": "Doe",
                          "maxLength": 25,
                          "type": "string"
                        },
                        "locale": {
                          "example": "NL",
                          "maxLength": 2,
                          "minLength": 2,
                          "type": "string"
                        },
                        "mobile_phone": {
                          "maxLength": 24,
                          "type": "string"
                        },
                        "nickname": {
                          "example": "johnny",
                          "maxLength": 30,
                          "type": "string"
                        },
                        "phone": {
                          "maxLength": 24,
                          "type": "string"
                        },
                        "prefix": {
                          "maxLength": 10,
                          "type": "string"
                        },
                        "state": {
                          "maxLength": 6,
                          "type": "string"
                        },
                        "title": {
                          "example": "Mr",
                          "maxLength": 10,
                          "type": "string"
                        },
                        "zip_code": {
                          "example": "AB1234",
                          "maxLength": 10,
                          "type": "string"
                        }
                      },
                      "required": [
                        "address1",
                        "brand",
                        "city",
                        "country",
                        "email",
                        "first_name",
                        "house_number",
                        "last_name",
                        "locale",
                        "zip_code"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            },
            "description": "Validation errors"
          }
        },
        "summary": "Create Customer (BETA)",
        "tags": [
          "Customers (BETA)"
        ]
      }
    },
    "/customers/{customer_id}": {
      "get": {
        "description": "Get customer by id",
        "operationId": "GetCustomer",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "customer_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "additionalProperties": false,
                      "properties": {
                        "address1": {
                          "example": "Main ave.",
                          "maxLength": 64,
                          "type": "string"
                        },
                        "address2": {
                          "maxLength": 64,
                          "type": "string"
                        },
                        "address3": {
                          "maxLength": 64,
                          "type": "string"
                        },
                        "birthday": {
                          "format": "date",
                          "type": "string"
                        },
                        "brand": {
                          "maxLength": 10,
                          "type": "string"
                        },
                        "city": {
                          "example": "Amsterdam",
                          "maxLength": 50,
                          "type": "string"
                        },
                        "country": {
                          "example": "NL",
                          "format": "country-alpha2",
                          "type": "string"
                        },
                        "email": {
                          "format": "email",
                          "type": "string"
                        },
                        "first_name": {
                          "example": "John",
                          "maxLength": 25,
                          "type": "string"
                        },
                        "forwarded_ip": {
                          "format": "ipv4",
                          "type": "string"
                        },
                        "gender": {
                          "example": "M",
                          "maxLength": 1,
                          "type": "string"
                        },
                        "house_number": {
                          "example": "1",
                          "maxLength": 10,
                          "type": "string"
                        },
                        "ip_address": {
                          "format": "ipv4",
                          "type": "string"
                        },
                        "last_name": {
                          "example": "Doe",
                          "maxLength": 25,
                          "type": "string"
                        },
                        "locale": {
                          "example": "NL",
                          "maxLength": 2,
                          "minLength": 2,
                          "type": "string"
                        },
                        "mobile_phone": {
                          "maxLength": 24,
                          "type": "string"
                        },
                        "nickname": {
                          "example": "johnny",
                          "maxLength": 30,
                          "type": "string"
                        },
                        "phone": {
                          "maxLength": 24,
                          "type": "string"
                        },
                        "prefix": {
                          "maxLength": 10,
                          "type": "string"
                        },
                        "state": {
                          "maxLength": 6,
                          "type": "string"
                        },
                        "title": {
                          "example": "Mr",
                          "maxLength": 10,
                          "type": "string"
                        },
                        "zip_code": {
                          "example": "AB1234",
                          "maxLength": 10,
                          "type": "string"
                        }
                      },
                      "required": [
                        "address1",
                        "brand",
                        "city",
                        "country",
                        "email",
                        "first_name",
                        "house_number",
                        "last_name",
                        "locale",
                        "zip_code"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorResponse"
                }
              }
            },
            "description": "Customer not found"
          }
        },
        "summary": "Get Customer (BETA)",
        "tags": [
          "Customers (BETA)"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "UpdateCustomer",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "customer_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "address1": {
                    "example": "Main ave.",
                    "maxLength": 64,
                    "type": "string"
                  },
                  "address2": {
                    "maxLength": 64,
                    "type": "string"
                  },
                  "address3": {
                    "maxLength": 64,
                    "type": "string"
                  },
                  "birthday": {
                    "format": "date",
                    "type": "string"
                  },
                  "brand": {
                    "maxLength": 10,
                    "type": "string"
                  },
                  "city": {
                    "example": "Amsterdam",
                    "maxLength": 50,
                    "type": "string"
                  },
                  "country": {
                    "example": "NL",
                    "format": "country-alpha2",
                    "type": "string"
                  },
                  "email": {
                    "format": "email",
                    "type": "string"
                  },
                  "first_name": {
                    "example": "John",
                    "maxLength": 25,
                    "type": "string"
                  },
                  "forwarded_ip": {
                    "format": "ipv4",
                    "type": "string"
                  },
                  "gender": {
                    "example": "M",
                    "maxLength": 1,
                    "type": "string"
                  },
                  "house_number": {
                    "example": "1",
                    "maxLength": 10,
                    "type": "string"
                  },
                  "ip_address": {
                    "format": "ipv4",
                    "type": "string"
                  },
                  "last_name": {
                    "example": "Doe",
                    "maxLength": 25,
                    "type": "string"
                  },
                  "locale": {
                    "example": "NL",
                    "maxLength": 2,
                    "minLength": 2,
                    "type": "string"
                  },
                  "mobile_phone": {
                    "maxLength": 24,
                    "type": "string"
                  },
                  "nickname": {
                    "example": "johnny",
                    "maxLength": 30,
                    "type": "string"
                  },
                  "phone": {
                    "maxLength": 24,
                    "type": "string"
                  },
                  "prefix": {
                    "maxLength": 10,
                    "type": "string"
                  },
                  "state": {
                    "maxLength": 6,
                    "type": "string"
                  },
                  "title": {
                    "example": "Mr",
                    "maxLength": 10,
                    "type": "string"
                  },
                  "zip_code": {
                    "example": "AB1234",
                    "maxLength": 10,
                    "type": "string"
                  }
                },
                "required": [],
                "type": "object"
              }
            }
          },
          "description": "",
          "required": 1
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "additionalProperties": false,
                      "properties": {
                        "address1": {
                          "example": "Main ave.",
                          "maxLength": 64,
                          "type": "string"
                        },
                        "address2": {
                          "maxLength": 64,
                          "type": "string"
                        },
                        "address3": {
                          "maxLength": 64,
                          "type": "string"
                        },
                        "birthday": {
                          "format": "date",
                          "type": "string"
                        },
                        "brand": {
                          "maxLength": 10,
                          "type": "string"
                        },
                        "city": {
                          "example": "Amsterdam",
                          "maxLength": 50,
                          "type": "string"
                        },
                        "country": {
                          "example": "NL",
                          "format": "country-alpha2",
                          "type": "string"
                        },
                        "email": {
                          "format": "email",
                          "type": "string"
                        },
                        "first_name": {
                          "example": "John",
                          "maxLength": 25,
                          "type": "string"
                        },
                        "forwarded_ip": {
                          "format": "ipv4",
                          "type": "string"
                        },
                        "gender": {
                          "example": "M",
                          "maxLength": 1,
                          "type": "string"
                        },
                        "house_number": {
                          "example": "1",
                          "maxLength": 10,
                          "type": "string"
                        },
                        "ip_address": {
                          "format": "ipv4",
                          "type": "string"
                        },
                        "last_name": {
                          "example": "Doe",
                          "maxLength": 25,
                          "type": "string"
                        },
                        "locale": {
                          "example": "NL",
                          "maxLength": 2,
                          "minLength": 2,
                          "type": "string"
                        },
                        "mobile_phone": {
                          "maxLength": 24,
                          "type": "string"
                        },
                        "nickname": {
                          "example": "johnny",
                          "maxLength": 30,
                          "type": "string"
                        },
                        "phone": {
                          "maxLength": 24,
                          "type": "string"
                        },
                        "prefix": {
                          "maxLength": 10,
                          "type": "string"
                        },
                        "state": {
                          "maxLength": 6,
                          "type": "string"
                        },
                        "title": {
                          "example": "Mr",
                          "maxLength": 10,
                          "type": "string"
                        },
                        "zip_code": {
                          "example": "AB1234",
                          "maxLength": 10,
                          "type": "string"
                        }
                      },
                      "required": [
                        "address1",
                        "brand",
                        "city",
                        "country",
                        "email",
                        "first_name",
                        "house_number",
                        "last_name",
                        "locale",
                        "zip_code"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            },
            "description": "Validation errors"
          }
        },
        "summary": "Update Customer (BETA)",
        "tags": [
          "Customers (BETA)"
        ]
      }
    },
    "/customers/{customer_id}/delivery-details": {
      "get": {
        "description": "",
        "operationId": "ListDeliveryDetails",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "customer_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "address1": {
                            "maxLength": 64,
                            "type": "string"
                          },
                          "address2": {
                            "maxLength": 64,
                            "type": "string"
                          },
                          "address3": {
                            "maxLength": 64,
                            "type": "string"
                          },
                          "city": {
                            "maxLength": 50,
                            "type": "string"
                          },
                          "company_name": {
                            "maxLength": 50,
                            "type": "string"
                          },
                          "company_registration_number": {
                            "maxLength": 25,
                            "type": "string"
                          },
                          "country": {
                            "format": "country-alpha2",
                            "type": "string"
                          },
                          "email": {
                            "format": "email",
                            "type": "string"
                          },
                          "favorite": {
                            "type": "boolean"
                          },
                          "first_name": {
                            "maxLength": 25,
                            "type": "string"
                          },
                          "house_number": {
                            "maxLength": 10,
                            "type": "string"
                          },
                          "last_name": {
                            "maxLength": 25,
                            "type": "string"
                          },
                          "mobile_phone": {
                            "maxLength": 25,
                            "type": "string"
                          },
                          "phone": {
                            "maxLength": 25,
                            "type": "string"
                          },
                          "status": {
                            "enum": [
                              "active",
                              "disabled"
                            ],
                            "type": "string"
                          },
                          "title": {
                            "maxLength": 15,
                            "type": "string"
                          },
                          "zip_code": {
                            "maxLength": 10,
                            "type": "string"
                          }
                        },
                        "required": [
                          "address1",
                          "city",
                          "country",
                          "first_name",
                          "house_number",
                          "last_name",
                          "status",
                          "zip_code"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          }
        },
        "summary": "List Delivery Details (BETA)",
        "tags": [
          "Customers (BETA)"
        ]
      },
      "post": {
        "description": "",
        "operationId": "CreateDeliveryDetails",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "customer_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "address1": {
                    "maxLength": 64,
                    "type": "string"
                  },
                  "address2": {
                    "maxLength": 64,
                    "type": "string"
                  },
                  "address3": {
                    "maxLength": 64,
                    "type": "string"
                  },
                  "city": {
                    "maxLength": 50,
                    "type": "string"
                  },
                  "company_name": {
                    "maxLength": 50,
                    "type": "string"
                  },
                  "company_registration_number": {
                    "maxLength": 25,
                    "type": "string"
                  },
                  "country": {
                    "format": "country-alpha2",
                    "type": "string"
                  },
                  "email": {
                    "format": "email",
                    "type": "string"
                  },
                  "favorite": {
                    "type": "boolean"
                  },
                  "first_name": {
                    "maxLength": 25,
                    "type": "string"
                  },
                  "house_number": {
                    "maxLength": 10,
                    "type": "string"
                  },
                  "last_name": {
                    "maxLength": 25,
                    "type": "string"
                  },
                  "mobile_phone": {
                    "maxLength": 25,
                    "type": "string"
                  },
                  "phone": {
                    "maxLength": 25,
                    "type": "string"
                  },
                  "status": {
                    "enum": [
                      "active",
                      "disabled"
                    ],
                    "type": "string"
                  },
                  "title": {
                    "maxLength": 15,
                    "type": "string"
                  },
                  "zip_code": {
                    "maxLength": 10,
                    "type": "string"
                  }
                },
                "required": [
                  "address1",
                  "city",
                  "country",
                  "first_name",
                  "house_number",
                  "last_name",
                  "status",
                  "zip_code"
                ],
                "type": "object"
              }
            }
          },
          "description": "",
          "required": 1
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "additionalProperties": false,
                      "properties": {
                        "address1": {
                          "maxLength": 64,
                          "type": "string"
                        },
                        "address2": {
                          "maxLength": 64,
                          "type": "string"
                        },
                        "address3": {
                          "maxLength": 64,
                          "type": "string"
                        },
                        "city": {
                          "maxLength": 50,
                          "type": "string"
                        },
                        "company_name": {
                          "maxLength": 50,
                          "type": "string"
                        },
                        "company_registration_number": {
                          "maxLength": 25,
                          "type": "string"
                        },
                        "country": {
                          "format": "country-alpha2",
                          "type": "string"
                        },
                        "email": {
                          "format": "email",
                          "type": "string"
                        },
                        "favorite": {
                          "type": "boolean"
                        },
                        "first_name": {
                          "maxLength": 25,
                          "type": "string"
                        },
                        "house_number": {
                          "maxLength": 10,
                          "type": "string"
                        },
                        "last_name": {
                          "maxLength": 25,
                          "type": "string"
                        },
                        "mobile_phone": {
                          "maxLength": 25,
                          "type": "string"
                        },
                        "phone": {
                          "maxLength": 25,
                          "type": "string"
                        },
                        "status": {
                          "enum": [
                            "active",
                            "disabled"
                          ],
                          "type": "string"
                        },
                        "title": {
                          "maxLength": 15,
                          "type": "string"
                        },
                        "zip_code": {
                          "maxLength": 10,
                          "type": "string"
                        }
                      },
                      "required": [
                        "address1",
                        "city",
                        "country",
                        "first_name",
                        "house_number",
                        "last_name",
                        "status",
                        "zip_code"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            },
            "description": "Validation errors"
          }
        },
        "summary": "Create Delivery Details (BETA)",
        "tags": [
          "Customers (BETA)"
        ]
      }
    },
    "/customers/{customer_id}/payment-methods": {
      "get": {
        "description": "",
        "operationId": "ListCustomerPaymentMethods",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "customer_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "additionalProperties": false,
                        "oneOf": [
                          {
                            "properties": {
                              "type": {
                                "enum": [
                                  "direct_debit"
                                ]
                              }
                            },
                            "required": [
                              "direct_debit"
                            ]
                          }
                        ],
                        "properties": {
                          "direct_debit": {
                            "additionalProperties": false,
                            "properties": {
                              "bic": {
                                "type": "string"
                              },
                              "holder_name": {
                                "type": "string"
                              },
                              "iban": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "holder_name",
                              "iban",
                              "bic"
                            ],
                            "type": "object"
                          },
                          "status": {
                            "enum": [
                              "active"
                            ],
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "direct_debit"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "status"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          }
        },
        "summary": "List Payment Methods (BETA)",
        "tags": [
          "Customers (BETA)"
        ]
      },
      "post": {
        "description": "",
        "operationId": "CreateCustomerPaymentMethod",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "customer_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "oneOf": [
                  {
                    "properties": {
                      "type": {
                        "enum": [
                          "direct_debit"
                        ]
                      }
                    },
                    "required": [
                      "direct_debit"
                    ]
                  }
                ],
                "properties": {
                  "direct_debit": {
                    "additionalProperties": false,
                    "properties": {
                      "bic": {
                        "type": "string"
                      },
                      "holder_name": {
                        "type": "string"
                      },
                      "iban": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "holder_name",
                      "iban",
                      "bic"
                    ],
                    "type": "object"
                  },
                  "status": {
                    "enum": [
                      "active"
                    ],
                    "type": "string"
                  },
                  "type": {
                    "enum": [
                      "direct_debit"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "status"
                ],
                "type": "object"
              }
            }
          },
          "description": "",
          "required": 1
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "additionalProperties": false,
                      "oneOf": [
                        {
                          "properties": {
                            "type": {
                              "enum": [
                                "direct_debit"
                              ]
                            }
                          },
                          "required": [
                            "direct_debit"
                          ]
                        }
                      ],
                      "properties": {
                        "direct_debit": {
                          "additionalProperties": false,
                          "properties": {
                            "bic": {
                              "type": "string"
                            },
                            "holder_name": {
                              "type": "string"
                            },
                            "iban": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "holder_name",
                            "iban",
                            "bic"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "enum": [
                            "active"
                          ],
                          "type": "string"
                        },
                        "type": {
                          "enum": [
                            "direct_debit"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "status"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            },
            "description": "Validation errors"
          }
        },
        "summary": "Create Payment Method (BETA)",
        "tags": [
          "Customers (BETA)"
        ]
      }
    },
    "/delivery-details/{delivery_details_id}": {
      "get": {
        "description": "",
        "operationId": "GetDeliveryDetails",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "delivery_details_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "additionalProperties": false,
                      "properties": {
                        "address1": {
                          "maxLength": 64,
                          "type": "string"
                        },
                        "address2": {
                          "maxLength": 64,
                          "type": "string"
                        },
                        "address3": {
                          "maxLength": 64,
                          "type": "string"
                        },
                        "city": {
                          "maxLength": 50,
                          "type": "string"
                        },
                        "company_name": {
                          "maxLength": 50,
                          "type": "string"
                        },
                        "company_registration_number": {
                          "maxLength": 25,
                          "type": "string"
                        },
                        "country": {
                          "format": "country-alpha2",
                          "type": "string"
                        },
                        "email": {
                          "format": "email",
                          "type": "string"
                        },
                        "favorite": {
                          "type": "boolean"
                        },
                        "first_name": {
                          "maxLength": 25,
                          "type": "string"
                        },
                        "house_number": {
                          "maxLength": 10,
                          "type": "string"
                        },
                        "last_name": {
                          "maxLength": 25,
                          "type": "string"
                        },
                        "mobile_phone": {
                          "maxLength": 25,
                          "type": "string"
                        },
                        "phone": {
                          "maxLength": 25,
                          "type": "string"
                        },
                        "status": {
                          "enum": [
                            "active",
                            "disabled"
                          ],
                          "type": "string"
                        },
                        "title": {
                          "maxLength": 15,
                          "type": "string"
                        },
                        "zip_code": {
                          "maxLength": 10,
                          "type": "string"
                        }
                      },
                      "required": [
                        "address1",
                        "city",
                        "country",
                        "first_name",
                        "house_number",
                        "last_name",
                        "status",
                        "zip_code"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorResponse"
                }
              }
            },
            "description": "Delivery details not found"
          }
        },
        "summary": "Get Delivery Details (BETA)",
        "tags": [
          "Customers (BETA)"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "UpdateDeliveryDetails",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "delivery_details_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "address1": {
                    "maxLength": 64,
                    "type": "string"
                  },
                  "address2": {
                    "maxLength": 64,
                    "type": "string"
                  },
                  "address3": {
                    "maxLength": 64,
                    "type": "string"
                  },
                  "city": {
                    "maxLength": 50,
                    "type": "string"
                  },
                  "company_name": {
                    "maxLength": 50,
                    "type": "string"
                  },
                  "company_registration_number": {
                    "maxLength": 25,
                    "type": "string"
                  },
                  "country": {
                    "format": "country-alpha2",
                    "type": "string"
                  },
                  "email": {
                    "format": "email",
                    "type": "string"
                  },
                  "favorite": {
                    "type": "boolean"
                  },
                  "first_name": {
                    "maxLength": 25,
                    "type": "string"
                  },
                  "house_number": {
                    "maxLength": 10,
                    "type": "string"
                  },
                  "last_name": {
                    "maxLength": 25,
                    "type": "string"
                  },
                  "mobile_phone": {
                    "maxLength": 25,
                    "type": "string"
                  },
                  "phone": {
                    "maxLength": 25,
                    "type": "string"
                  },
                  "status": {
                    "enum": [
                      "active",
                      "disabled"
                    ],
                    "type": "string"
                  },
                  "title": {
                    "maxLength": 15,
                    "type": "string"
                  },
                  "zip_code": {
                    "maxLength": 10,
                    "type": "string"
                  }
                },
                "required": [],
                "type": "object"
              }
            }
          },
          "description": "",
          "required": 1
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "additionalProperties": false,
                      "properties": {
                        "address1": {
                          "maxLength": 64,
                          "type": "string"
                        },
                        "address2": {
                          "maxLength": 64,
                          "type": "string"
                        },
                        "address3": {
                          "maxLength": 64,
                          "type": "string"
                        },
                        "city": {
                          "maxLength": 50,
                          "type": "string"
                        },
                        "company_name": {
                          "maxLength": 50,
                          "type": "string"
                        },
                        "company_registration_number": {
                          "maxLength": 25,
                          "type": "string"
                        },
                        "country": {
                          "format": "country-alpha2",
                          "type": "string"
                        },
                        "email": {
                          "format": "email",
                          "type": "string"
                        },
                        "favorite": {
                          "type": "boolean"
                        },
                        "first_name": {
                          "maxLength": 25,
                          "type": "string"
                        },
                        "house_number": {
                          "maxLength": 10,
                          "type": "string"
                        },
                        "last_name": {
                          "maxLength": 25,
                          "type": "string"
                        },
                        "mobile_phone": {
                          "maxLength": 25,
                          "type": "string"
                        },
                        "phone": {
                          "maxLength": 25,
                          "type": "string"
                        },
                        "status": {
                          "enum": [
                            "active",
                            "disabled"
                          ],
                          "type": "string"
                        },
                        "title": {
                          "maxLength": 15,
                          "type": "string"
                        },
                        "zip_code": {
                          "maxLength": 10,
                          "type": "string"
                        }
                      },
                      "required": [
                        "address1",
                        "city",
                        "country",
                        "first_name",
                        "house_number",
                        "last_name",
                        "status",
                        "zip_code"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            },
            "description": "Validation errors"
          }
        },
        "summary": "Update Delivery Details (BETA)",
        "tags": [
          "Customers (BETA)"
        ]
      }
    },
    "/identitydocs/{identitydoc_id}": {
      "get": {
        "description": "Fetch information about an ID or a passport uploaded for an ultimate beneficiary owner",
        "operationId": "GetIdentityDoc",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "identitydoc_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "additionalFields": false,
                      "properties": {
                        "document_type": {
                          "enum": [
                            "id",
                            "passport",
                            "driverslicense",
                            "proof_of_address"
                          ],
                          "type": "string"
                        },
                        "encoded_content": {
                          "format": "base64-encoded-content",
                          "type": "string"
                        },
                        "filename": {
                          "maxLength": 250,
                          "type": "string"
                        },
                        "mime_type": {
                          "enum": [
                            "application/pdf",
                            "image/jpeg",
                            "image/png"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "filename",
                        "mime_type",
                        "encoded_content",
                        "document_type"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorResponse"
                }
              }
            },
            "description": "Identity doc not found"
          }
        },
        "summary": "Get an ID or a passport (BETA)",
        "tags": [
          "Onboarding (BETA)"
        ]
      }
    },
    "/me": {
      "get": {
        "description": "Provides currenty authenticated user details",
        "operationId": "Me",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "merchant_id": {
                          "type": "integer"
                        },
                        "role": {
                          "type": "string"
                        },
                        "site_id": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "merchant_id",
                        "site_id"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          }
        },
        "summary": "Currently authenticated user",
        "tags": [
          "Generic"
        ]
      }
    },
    "/pad/ccs": {
      "post": {
        "description": "Calculate customer credibility score",
        "operationId": "PAD::CustomerCredibilityScore",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalFields": false,
                "properties": {
                  "billing_address": {
                    "properties": {
                      "apartment": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      },
                      "street": {
                        "type": "string"
                      },
                      "zipcode": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "street",
                      "apartment",
                      "zipcode",
                      "city",
                      "country"
                    ],
                    "type": "object"
                  },
                  "browser_info": {
                    "properties": {
                      "accept_header": {
                        "type": "string"
                      },
                      "cookies_enabled": {
                        "type": "boolean"
                      },
                      "ip_address": {
                        "type": "string"
                      },
                      "java_enabled": {
                        "type": "boolean"
                      },
                      "javascript_enabled": {
                        "type": "boolean"
                      },
                      "language": {
                        "type": "string"
                      },
                      "platform": {
                        "type": "string"
                      },
                      "screen_color_depth": {
                        "type": "integer"
                      },
                      "screen_height": {
                        "type": "integer"
                      },
                      "screen_width": {
                        "type": "integer"
                      },
                      "time_zone": {
                        "type": "integer"
                      },
                      "user_agent": {
                        "type": "string"
                      }
                    },
                    "required": [],
                    "type": "object"
                  },
                  "customer_info": {
                    "properties": {
                      "birthdate": {
                        "format": "date",
                        "type": "string"
                      },
                      "email": {
                        "format": "email",
                        "type": "string"
                      },
                      "first_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "phone": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "first_name",
                      "last_name",
                      "email",
                      "birthdate",
                      "phone"
                    ],
                    "type": "object"
                  },
                  "customer_reference": {
                    "type": "string"
                  },
                  "gateway": {
                    "type": "string"
                  },
                  "order": {
                    "properties": {
                      "amount": {
                        "type": "integer"
                      },
                      "currency": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "description"
                    ],
                    "type": "object"
                  },
                  "reusable": {
                    "type": "boolean"
                  },
                  "shipping_address": {
                    "properties": {
                      "apartment": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      },
                      "street": {
                        "type": "string"
                      },
                      "zipcode": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "street",
                      "apartment",
                      "zipcode",
                      "city",
                      "country"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "customer_reference",
                  "order"
                ],
                "type": "object"
              }
            }
          },
          "description": "",
          "required": 1
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            },
            "description": "Validation errors"
          }
        },
        "summary": "Customer Credibility Score (BETA)",
        "tags": [
          "PAD (BETA)"
        ]
      }
    },
    "/pad/orders/{order_id}": {
      "get": {
        "description": "Get PAD order details",
        "operationId": "PAD::OrderDetails",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "order_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          }
        },
        "summary": "PAD Order Details (BETA)",
        "tags": [
          "PAD (BETA)"
        ]
      }
    },
    "/payment-methods": {
      "get": {
        "description": "",
        "operationId": "ListPaymentMethods",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "locale",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "application",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "currency",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "country",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "amount",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "properties": {
                          "allowed_amount": {
                            "properties": {
                              "max": {
                                "example": 1000000,
                                "type": "integer"
                              },
                              "min": {
                                "example": 0,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "allowed_apps": {
                            "example": [
                              "APIFCO"
                            ],
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "allowed_currencies": {
                            "example": [
                              "EUR",
                              "USD",
                              "GBP"
                            ],
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "brands": {
                            "items": {
                              "properties": {
                                "icon_urls": {
                                  "properties": {
                                    "large": {
                                      "example": "https://media.multisafepay.com/img/methods/3x/postepay.png",
                                      "type": "string"
                                    },
                                    "medium": {
                                      "example": "https://media.multisafepay.com/img/methods/2x/postepay.png",
                                      "type": "string"
                                    },
                                    "vector": {
                                      "example": "https://media.multisafepay.com/img/methods/svg/postepay.svg",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "id": {
                                  "example": "POSTEPAY",
                                  "type": "string"
                                },
                                "name": {
                                  "example": "PostePay",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "checkout_data_required": {
                            "example": false,
                            "type": "boolean"
                          },
                          "country_preferred": {
                            "example": [
                              "NL"
                            ],
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "extras": {
                            "example": {
                              "issuers": [
                                {
                                  "bic": "ABNANL2A",
                                  "code": "0031",
                                  "name": "ABN Amro Bank"
                                }
                              ]
                            },
                            "type": "object"
                          },
                          "icon_urls": {
                            "properties": {
                              "large": {
                                "example": "https://media.multisafepay.com/img/methods/3x/visa.png",
                                "type": "string"
                              },
                              "medium": {
                                "example": "https://media.multisafepay.com/img/methods/2x/visa.png",
                                "type": "string"
                              },
                              "vector": {
                                "example": "https://media.multisafepay.com/img/methods/svg/visa.svg",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "id": {
                            "example": "VISA",
                            "type": "string"
                          },
                          "name": {
                            "example": "Visa",
                            "type": "string"
                          },
                          "required_fields": {
                            "example": [],
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          }
        },
        "summary": "Payment Methods",
        "tags": [
          "Payment Methods"
        ]
      }
    },
    "/payment-methods/{payment_method_id}": {
      "get": {
        "description": "",
        "operationId": "GetCustomerPaymentMethod",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "payment_method_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "additionalProperties": false,
                      "oneOf": [
                        {
                          "properties": {
                            "type": {
                              "enum": [
                                "direct_debit"
                              ]
                            }
                          },
                          "required": [
                            "direct_debit"
                          ]
                        }
                      ],
                      "properties": {
                        "direct_debit": {
                          "additionalProperties": false,
                          "properties": {
                            "bic": {
                              "type": "string"
                            },
                            "holder_name": {
                              "type": "string"
                            },
                            "iban": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "holder_name",
                            "iban",
                            "bic"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "enum": [
                            "active"
                          ],
                          "type": "string"
                        },
                        "type": {
                          "enum": [
                            "direct_debit"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "status"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorResponse"
                }
              }
            },
            "description": "Payment method not found"
          }
        },
        "summary": "Get Payment method (BETA)",
        "tags": [
          "Customers (BETA)"
        ]
      }
    },
    "/plans": {
      "get": {
        "description": "",
        "operationId": "ListSubscriptionPlans",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "merchant_item_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return results starting from offset position",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "description": "Return results starting from offset position",
              "example": 5,
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "Limit number of returned results",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "description": "Limit number of returned results",
              "example": 5,
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "additionalFields": false,
                        "properties": {
                          "amount": {
                            "minimum": 0,
                            "type": "integer"
                          },
                          "currency": {
                            "example": "EUR",
                            "maxLength": 3,
                            "minLength": 3,
                            "type": "string"
                          },
                          "description": {
                            "maxLength": 256,
                            "type": "string"
                          },
                          "interval": {
                            "enum": [
                              "1 day",
                              "1 week",
                              "1 mon",
                              "1 year"
                            ],
                            "example": "1 mon",
                            "type": "string"
                          },
                          "interval_count": {
                            "minimum": 0,
                            "type": "integer"
                          },
                          "merchant_item_id": {
                            "example": "item-1-2-3",
                            "type": "string"
                          },
                          "name": {
                            "maxLength": 64,
                            "type": "string"
                          },
                          "status": {
                            "enum": [
                              "active",
                              "hidden",
                              "disabled"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "interval",
                          "interval_count",
                          "merchant_item_id",
                          "name",
                          "status",
                          "amount",
                          "currency"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "page": {
                      "additionalProperties": false,
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          }
        },
        "summary": "List Subscription Plans (BETA)",
        "tags": [
          "Subscriptions (BETA)"
        ]
      },
      "post": {
        "description": "",
        "operationId": "CreateSubscriptionPlan",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalFields": false,
                "properties": {
                  "amount": {
                    "minimum": 0,
                    "type": "integer"
                  },
                  "currency": {
                    "example": "EUR",
                    "maxLength": 3,
                    "minLength": 3,
                    "type": "string"
                  },
                  "description": {
                    "maxLength": 256,
                    "type": "string"
                  },
                  "interval": {
                    "enum": [
                      "1 day",
                      "1 week",
                      "1 mon",
                      "1 year"
                    ],
                    "example": "1 mon",
                    "type": "string"
                  },
                  "interval_count": {
                    "minimum": 0,
                    "type": "integer"
                  },
                  "merchant_item_id": {
                    "example": "item-1-2-3",
                    "type": "string"
                  },
                  "name": {
                    "maxLength": 64,
                    "type": "string"
                  },
                  "status": {
                    "enum": [
                      "active",
                      "hidden",
                      "disabled"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "interval",
                  "interval_count",
                  "merchant_item_id",
                  "name",
                  "status",
                  "amount",
                  "currency"
                ],
                "type": "object"
              }
            }
          },
          "description": "",
          "required": 1
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "additionalFields": false,
                      "properties": {
                        "amount": {
                          "minimum": 0,
                          "type": "integer"
                        },
                        "currency": {
                          "example": "EUR",
                          "maxLength": 3,
                          "minLength": 3,
                          "type": "string"
                        },
                        "description": {
                          "maxLength": 256,
                          "type": "string"
                        },
                        "interval": {
                          "enum": [
                            "1 day",
                            "1 week",
                            "1 mon",
                            "1 year"
                          ],
                          "example": "1 mon",
                          "type": "string"
                        },
                        "interval_count": {
                          "minimum": 0,
                          "type": "integer"
                        },
                        "merchant_item_id": {
                          "example": "item-1-2-3",
                          "type": "string"
                        },
                        "name": {
                          "maxLength": 64,
                          "type": "string"
                        },
                        "status": {
                          "enum": [
                            "active",
                            "hidden",
                            "disabled"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "interval",
                        "interval_count",
                        "merchant_item_id",
                        "name",
                        "status",
                        "amount",
                        "currency"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            },
            "description": "Validation errors"
          }
        },
        "summary": "Create Subscription Plan (BETA)",
        "tags": [
          "Subscriptions (BETA)"
        ]
      }
    },
    "/plans/{plan_id}": {
      "get": {
        "description": "",
        "operationId": "GetSubscriptionPlan",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "plan_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "additionalFields": false,
                      "properties": {
                        "amount": {
                          "minimum": 0,
                          "type": "integer"
                        },
                        "currency": {
                          "example": "EUR",
                          "maxLength": 3,
                          "minLength": 3,
                          "type": "string"
                        },
                        "description": {
                          "maxLength": 256,
                          "type": "string"
                        },
                        "interval": {
                          "enum": [
                            "1 day",
                            "1 week",
                            "1 mon",
                            "1 year"
                          ],
                          "example": "1 mon",
                          "type": "string"
                        },
                        "interval_count": {
                          "minimum": 0,
                          "type": "integer"
                        },
                        "merchant_item_id": {
                          "example": "item-1-2-3",
                          "type": "string"
                        },
                        "name": {
                          "maxLength": 64,
                          "type": "string"
                        },
                        "status": {
                          "enum": [
                            "active",
                            "hidden",
                            "disabled"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "interval",
                        "interval_count",
                        "merchant_item_id",
                        "name",
                        "status",
                        "amount",
                        "currency"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          }
        },
        "summary": "Get Subscription Plan (BETA)",
        "tags": [
          "Subscriptions (BETA)"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "UpdateSubscriptionPlan",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "plan_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalFields": false,
                "properties": {
                  "amount": {
                    "minimum": 0,
                    "type": "integer"
                  },
                  "currency": {
                    "example": "EUR",
                    "maxLength": 3,
                    "minLength": 3,
                    "type": "string"
                  },
                  "description": {
                    "maxLength": 256,
                    "type": "string"
                  },
                  "interval": {
                    "enum": [
                      "1 day",
                      "1 week",
                      "1 mon",
                      "1 year"
                    ],
                    "example": "1 mon",
                    "type": "string"
                  },
                  "interval_count": {
                    "minimum": 0,
                    "type": "integer"
                  },
                  "name": {
                    "maxLength": 64,
                    "type": "string"
                  },
                  "status": {
                    "enum": [
                      "active",
                      "hidden",
                      "disabled"
                    ],
                    "type": "string"
                  }
                },
                "required": [],
                "type": "object"
              }
            }
          },
          "description": "",
          "required": 1
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "additionalFields": false,
                      "properties": {
                        "amount": {
                          "minimum": 0,
                          "type": "integer"
                        },
                        "currency": {
                          "example": "EUR",
                          "maxLength": 3,
                          "minLength": 3,
                          "type": "string"
                        },
                        "description": {
                          "maxLength": 256,
                          "type": "string"
                        },
                        "interval": {
                          "enum": [
                            "1 day",
                            "1 week",
                            "1 mon",
                            "1 year"
                          ],
                          "example": "1 mon",
                          "type": "string"
                        },
                        "interval_count": {
                          "minimum": 0,
                          "type": "integer"
                        },
                        "merchant_item_id": {
                          "example": "item-1-2-3",
                          "type": "string"
                        },
                        "name": {
                          "maxLength": 64,
                          "type": "string"
                        },
                        "status": {
                          "enum": [
                            "active",
                            "hidden",
                            "disabled"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "interval",
                        "interval_count",
                        "merchant_item_id",
                        "name",
                        "status",
                        "amount",
                        "currency"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            },
            "description": "Validation errors"
          }
        },
        "summary": "Update Subscription Plan (BETA)",
        "tags": [
          "Subscriptions (BETA)"
        ]
      }
    },
    "/signup-account": {
      "post": {
        "description": "Create a new merchant account",
        "operationId": "Partner::SignupAccount",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalFields": false,
                "properties": {
                  "account": {
                    "additionalFields": false,
                    "properties": {
                      "address1": {
                        "example": "Jodenbreestraat 4",
                        "maxLength": 64,
                        "type": "string"
                      },
                      "address2": {
                        "maxLength": 64,
                        "type": "string"
                      },
                      "address3": {
                        "maxLength": 64,
                        "type": "string"
                      },
                      "apartment": {
                        "example": "2",
                        "maxLength": 9,
                        "type": "string"
                      },
                      "city": {
                        "example": "Amsterdam",
                        "maxLength": 50,
                        "type": "string"
                      },
                      "coc_number": {
                        "maxLength": 50,
                        "type": "string"
                      },
                      "company_name": {
                        "maxLength": 200,
                        "type": "string"
                      },
                      "country": {
                        "example": "NL",
                        "format": "country-alpha2",
                        "type": "string"
                      },
                      "email": {
                        "example": "merchant@example.com",
                        "format": "email",
                        "maxLength": 100,
                        "type": "string"
                      },
                      "fax": {
                        "maxLength": 15,
                        "type": "string"
                      },
                      "phone": {
                        "maxLength": 15,
                        "type": "string"
                      },
                      "vat_number": {
                        "maxLength": 50,
                        "type": "string"
                      },
                      "zipcode": {
                        "example": "1011 NK",
                        "maxLength": 30,
                        "type": "string"
                      }
                    },
                    "required": [
                      "company_name",
                      "email",
                      "country"
                    ],
                    "type": "object"
                  },
                  "currencies": {
                    "example": [
                      "EUR"
                    ],
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "user": {
                    "properties": {
                      "email": {
                        "format": "email",
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "email",
                      "password"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "account",
                  "user",
                  "currencies"
                ],
                "type": "object"
              }
            }
          },
          "description": "",
          "required": 1
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "account": {
                        "additionalFields": false,
                        "properties": {
                          "address1": {
                            "example": "Jodenbreestraat 4",
                            "maxLength": 64,
                            "type": "string"
                          },
                          "address2": {
                            "maxLength": 64,
                            "type": "string"
                          },
                          "address3": {
                            "maxLength": 64,
                            "type": "string"
                          },
                          "apartment": {
                            "example": "2",
                            "maxLength": 9,
                            "type": "string"
                          },
                          "city": {
                            "example": "Amsterdam",
                            "maxLength": 50,
                            "type": "string"
                          },
                          "coc_number": {
                            "maxLength": 50,
                            "type": "string"
                          },
                          "company_name": {
                            "maxLength": 200,
                            "type": "string"
                          },
                          "country": {
                            "example": "NL",
                            "format": "country-alpha2",
                            "type": "string"
                          },
                          "email": {
                            "example": "merchant@example.com",
                            "format": "email",
                            "maxLength": 100,
                            "type": "string"
                          },
                          "fax": {
                            "maxLength": 15,
                            "type": "string"
                          },
                          "phone": {
                            "maxLength": 15,
                            "type": "string"
                          },
                          "vat_number": {
                            "maxLength": 50,
                            "type": "string"
                          },
                          "zipcode": {
                            "example": "1011 NK",
                            "maxLength": 30,
                            "type": "string"
                          }
                        },
                        "required": [
                          "company_name",
                          "email",
                          "country"
                        ],
                        "type": "object"
                      },
                      "currencies": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "user": {
                        "properties": {
                          "email": {
                            "format": "email",
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "password": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "email",
                          "password"
                        ],
                        "type": "object"
                      }
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            },
            "description": "Validation errors"
          }
        },
        "summary": "Signup Account (BETA)",
        "tags": [
          "Onboarding (BETA)"
        ]
      }
    },
    "/sites/{site_id}": {
      "get": {
        "description": "Fetch information about an existing site",
        "operationId": "GetSite",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "site_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "additionalFields": false,
                      "properties": {
                        "name": {
                          "maxLength": 120,
                          "type": "string"
                        },
                        "notification_url": {
                          "format": "url",
                          "maxLength": 150,
                          "type": "string"
                        },
                        "price_from": {
                          "type": "integer"
                        },
                        "price_till": {
                          "type": "integer"
                        },
                        "support_email": {
                          "format": "email",
                          "maxLength": 100,
                          "type": "string"
                        },
                        "support_phone": {
                          "maxLength": 100,
                          "type": "string"
                        },
                        "url": {
                          "format": "url",
                          "maxLength": 150,
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "url"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorResponse"
                }
              }
            },
            "description": "Site not found"
          }
        },
        "summary": "Get Site (BETA)",
        "tags": [
          "Onboarding (BETA)"
        ]
      },
      "patch": {
        "description": "Update information about an existing site",
        "operationId": "UpdateSite",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "site_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalFields": false,
                "properties": {
                  "name": {
                    "maxLength": 120,
                    "type": "string"
                  },
                  "notification_url": {
                    "format": "url",
                    "maxLength": 150,
                    "type": "string"
                  },
                  "price_from": {
                    "type": "integer"
                  },
                  "price_till": {
                    "type": "integer"
                  },
                  "support_email": {
                    "format": "email",
                    "maxLength": 100,
                    "type": "string"
                  },
                  "support_phone": {
                    "maxLength": 100,
                    "type": "string"
                  },
                  "url": {
                    "format": "url",
                    "maxLength": 150,
                    "type": "string"
                  }
                },
                "required": [],
                "type": "object"
              }
            }
          },
          "description": "",
          "required": 1
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "additionalFields": false,
                      "properties": {
                        "name": {
                          "maxLength": 120,
                          "type": "string"
                        },
                        "notification_url": {
                          "format": "url",
                          "maxLength": 150,
                          "type": "string"
                        },
                        "price_from": {
                          "type": "integer"
                        },
                        "price_till": {
                          "type": "integer"
                        },
                        "support_email": {
                          "format": "email",
                          "maxLength": 100,
                          "type": "string"
                        },
                        "support_phone": {
                          "maxLength": 100,
                          "type": "string"
                        },
                        "url": {
                          "format": "url",
                          "maxLength": 150,
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "url"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorResponse"
                }
              }
            },
            "description": "Site not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            },
            "description": "Validation errors"
          }
        },
        "summary": "Update Site (BETA)",
        "tags": [
          "Onboarding (BETA)"
        ]
      }
    },
    "/subscriptions": {
      "post": {
        "description": "",
        "operationId": "CreateSubscription",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalFields": false,
                "properties": {
                  "allow_cancel_before_days": {
                    "minimum": 0,
                    "type": "integer"
                  },
                  "collecting_flow_id": {
                    "minimum": 0,
                    "type": "integer"
                  },
                  "collecting_method": {
                    "enum": [
                      "charge_automatically",
                      "send_invoice"
                    ],
                    "type": "string"
                  },
                  "current_period_end": {
                    "format": "date",
                    "type": "string"
                  },
                  "current_period_start": {
                    "format": "date",
                    "type": "string"
                  },
                  "customer_id": {
                    "type": "string"
                  },
                  "delivery_details_id": {
                    "type": "string"
                  },
                  "discount": {
                    "properties": {
                      "cap": {
                        "minimum": 0,
                        "type": "number"
                      },
                      "percent_off": {
                        "maximum": 100,
                        "minimum": 0,
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "end_date": {
                    "format": "date",
                    "type": "string"
                  },
                  "items": {
                    "properties": {
                      "amount": {
                        "minimum": 0,
                        "type": "integer"
                      },
                      "checkout_options": {
                        "properties": {
                          "tax_tables": {
                            "properties": {
                              "alternate": {
                                "items": {
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "rules": {
                                      "items": {
                                        "properties": {
                                          "rate": {
                                            "minimum": 0,
                                            "type": "number"
                                          },
                                          "shipping_taxed": {
                                            "type": "boolean"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "default": {
                                "properties": {
                                  "rate": {
                                    "minimum": 0,
                                    "type": "number"
                                  },
                                  "shipping_taxed": {
                                    "type": "boolean"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "currency": {
                        "example": "EUR",
                        "maxLength": 3,
                        "minLength": 3,
                        "type": "string"
                      },
                      "items": {
                        "items": {
                          "properties": {
                            "description": {
                              "type": "string"
                            },
                            "merchant_item_id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "plan_id": {
                              "type": "string"
                            },
                            "quantity": {
                              "minimum": 0,
                              "type": "number"
                            },
                            "tax_table_selector": {
                              "type": "string"
                            },
                            "unit_price": {
                              "type": "number"
                            },
                            "weight": {
                              "properties": {
                                "unit": {
                                  "type": "string"
                                },
                                "value": {
                                  "minimum": 0,
                                  "type": "number"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "name",
                            "merchant_item_id",
                            "quantity",
                            "unit_price"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "required": [
                      "amount",
                      "currency"
                    ],
                    "type": "object"
                  },
                  "max_amount_outstanding": {
                    "minimum": 0,
                    "type": "number"
                  },
                  "max_amount_outstanding_currency": {
                    "example": "EUR",
                    "maxLength": 3,
                    "minLength": 3,
                    "type": "string"
                  },
                  "max_orders_outstanding": {
                    "minimum": 0,
                    "type": "integer"
                  },
                  "payment_method_id": {
                    "type": "string"
                  },
                  "recurring_interval": {
                    "enum": [
                      "1 day",
                      "1 week",
                      "1 mon",
                      "1 year"
                    ],
                    "example": "1 mon",
                    "type": "string"
                  },
                  "recurring_interval_count": {
                    "minimum": 0,
                    "type": "integer"
                  },
                  "start_date": {
                    "format": "date",
                    "type": "string"
                  },
                  "status": {
                    "enum": [
                      "active",
                      "inactive"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "collecting_flow_id",
                  "collecting_method",
                  "customer_id",
                  "delivery_details_id",
                  "items",
                  "payment_method_id",
                  "start_date",
                  "status"
                ],
                "type": "object"
              }
            }
          },
          "description": "",
          "required": 1
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "additionalFields": false,
                      "properties": {
                        "allow_cancel_before_days": {
                          "minimum": 0,
                          "type": "integer"
                        },
                        "collecting_flow_id": {
                          "minimum": 0,
                          "type": "integer"
                        },
                        "collecting_method": {
                          "enum": [
                            "charge_automatically",
                            "send_invoice"
                          ],
                          "type": "string"
                        },
                        "current_period_end": {
                          "format": "date",
                          "type": "string"
                        },
                        "current_period_start": {
                          "format": "date",
                          "type": "string"
                        },
                        "customer_id": {
                          "type": "string"
                        },
                        "delivery_details_id": {
                          "type": "string"
                        },
                        "discount": {
                          "properties": {
                            "cap": {
                              "minimum": 0,
                              "type": "number"
                            },
                            "percent_off": {
                              "maximum": 100,
                              "minimum": 0,
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "end_date": {
                          "format": "date",
                          "type": "string"
                        },
                        "items": {
                          "properties": {
                            "amount": {
                              "minimum": 0,
                              "type": "integer"
                            },
                            "checkout_options": {
                              "properties": {
                                "tax_tables": {
                                  "properties": {
                                    "alternate": {
                                      "items": {
                                        "properties": {
                                          "name": {
                                            "type": "string"
                                          },
                                          "rules": {
                                            "items": {
                                              "properties": {
                                                "rate": {
                                                  "minimum": 0,
                                                  "type": "number"
                                                },
                                                "shipping_taxed": {
                                                  "type": "boolean"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "type": "array"
                                    },
                                    "default": {
                                      "properties": {
                                        "rate": {
                                          "minimum": 0,
                                          "type": "number"
                                        },
                                        "shipping_taxed": {
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "currency": {
                              "example": "EUR",
                              "maxLength": 3,
                              "minLength": 3,
                              "type": "string"
                            },
                            "items": {
                              "items": {
                                "properties": {
                                  "description": {
                                    "type": "string"
                                  },
                                  "merchant_item_id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "plan_id": {
                                    "type": "string"
                                  },
                                  "quantity": {
                                    "minimum": 0,
                                    "type": "number"
                                  },
                                  "tax_table_selector": {
                                    "type": "string"
                                  },
                                  "unit_price": {
                                    "type": "number"
                                  },
                                  "weight": {
                                    "properties": {
                                      "unit": {
                                        "type": "string"
                                      },
                                      "value": {
                                        "minimum": 0,
                                        "type": "number"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "required": [
                                  "name",
                                  "merchant_item_id",
                                  "quantity",
                                  "unit_price"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "amount",
                            "currency"
                          ],
                          "type": "object"
                        },
                        "max_amount_outstanding": {
                          "minimum": 0,
                          "type": "number"
                        },
                        "max_amount_outstanding_currency": {
                          "example": "EUR",
                          "maxLength": 3,
                          "minLength": 3,
                          "type": "string"
                        },
                        "max_orders_outstanding": {
                          "minimum": 0,
                          "type": "integer"
                        },
                        "payment_method_id": {
                          "type": "string"
                        },
                        "recurring_interval": {
                          "enum": [
                            "1 day",
                            "1 week",
                            "1 mon",
                            "1 year"
                          ],
                          "example": "1 mon",
                          "type": "string"
                        },
                        "recurring_interval_count": {
                          "minimum": 0,
                          "type": "integer"
                        },
                        "start_date": {
                          "format": "date",
                          "type": "string"
                        },
                        "status": {
                          "enum": [
                            "active",
                            "inactive"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "collecting_flow_id",
                        "collecting_method",
                        "customer_id",
                        "delivery_details_id",
                        "items",
                        "payment_method_id",
                        "start_date",
                        "status"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            },
            "description": "Validation errors"
          }
        },
        "summary": "Create Subscription (BETA)",
        "tags": [
          "Subscriptions (BETA)"
        ]
      }
    },
    "/subscriptions/{subscription_id}": {
      "get": {
        "description": "",
        "operationId": "GetSubscription",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "subscription_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "additionalFields": false,
                      "properties": {
                        "allow_cancel_before_days": {
                          "minimum": 0,
                          "type": "integer"
                        },
                        "collecting_flow_id": {
                          "minimum": 0,
                          "type": "integer"
                        },
                        "collecting_method": {
                          "enum": [
                            "charge_automatically",
                            "send_invoice"
                          ],
                          "type": "string"
                        },
                        "current_period_end": {
                          "format": "date",
                          "type": "string"
                        },
                        "current_period_start": {
                          "format": "date",
                          "type": "string"
                        },
                        "customer_id": {
                          "type": "string"
                        },
                        "delivery_details_id": {
                          "type": "string"
                        },
                        "discount": {
                          "properties": {
                            "cap": {
                              "minimum": 0,
                              "type": "number"
                            },
                            "percent_off": {
                              "maximum": 100,
                              "minimum": 0,
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "end_date": {
                          "format": "date",
                          "type": "string"
                        },
                        "items": {
                          "properties": {
                            "amount": {
                              "minimum": 0,
                              "type": "integer"
                            },
                            "checkout_options": {
                              "properties": {
                                "tax_tables": {
                                  "properties": {
                                    "alternate": {
                                      "items": {
                                        "properties": {
                                          "name": {
                                            "type": "string"
                                          },
                                          "rules": {
                                            "items": {
                                              "properties": {
                                                "rate": {
                                                  "minimum": 0,
                                                  "type": "number"
                                                },
                                                "shipping_taxed": {
                                                  "type": "boolean"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "type": "array"
                                    },
                                    "default": {
                                      "properties": {
                                        "rate": {
                                          "minimum": 0,
                                          "type": "number"
                                        },
                                        "shipping_taxed": {
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "currency": {
                              "example": "EUR",
                              "maxLength": 3,
                              "minLength": 3,
                              "type": "string"
                            },
                            "items": {
                              "items": {
                                "properties": {
                                  "description": {
                                    "type": "string"
                                  },
                                  "merchant_item_id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "plan_id": {
                                    "type": "string"
                                  },
                                  "quantity": {
                                    "minimum": 0,
                                    "type": "number"
                                  },
                                  "tax_table_selector": {
                                    "type": "string"
                                  },
                                  "unit_price": {
                                    "type": "number"
                                  },
                                  "weight": {
                                    "properties": {
                                      "unit": {
                                        "type": "string"
                                      },
                                      "value": {
                                        "minimum": 0,
                                        "type": "number"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "required": [
                                  "name",
                                  "merchant_item_id",
                                  "quantity",
                                  "unit_price"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "amount",
                            "currency"
                          ],
                          "type": "object"
                        },
                        "max_amount_outstanding": {
                          "minimum": 0,
                          "type": "number"
                        },
                        "max_amount_outstanding_currency": {
                          "example": "EUR",
                          "maxLength": 3,
                          "minLength": 3,
                          "type": "string"
                        },
                        "max_orders_outstanding": {
                          "minimum": 0,
                          "type": "integer"
                        },
                        "payment_method_id": {
                          "type": "string"
                        },
                        "recurring_interval": {
                          "enum": [
                            "1 day",
                            "1 week",
                            "1 mon",
                            "1 year"
                          ],
                          "example": "1 mon",
                          "type": "string"
                        },
                        "recurring_interval_count": {
                          "minimum": 0,
                          "type": "integer"
                        },
                        "start_date": {
                          "format": "date",
                          "type": "string"
                        },
                        "status": {
                          "enum": [
                            "active",
                            "inactive"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "collecting_flow_id",
                        "collecting_method",
                        "customer_id",
                        "delivery_details_id",
                        "items",
                        "payment_method_id",
                        "start_date",
                        "status"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          }
        },
        "summary": "Get Subscription (BETA)",
        "tags": [
          "Subscriptions (BETA)"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "UpdateSubscription",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "subscription_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalFields": false,
                "properties": {
                  "allow_cancel_before_days": {
                    "minimum": 0,
                    "type": "integer"
                  },
                  "collecting_flow_id": {
                    "minimum": 0,
                    "type": "integer"
                  },
                  "collecting_method": {
                    "enum": [
                      "charge_automatically",
                      "send_invoice"
                    ],
                    "type": "string"
                  },
                  "current_period_end": {
                    "format": "date",
                    "type": "string"
                  },
                  "current_period_start": {
                    "format": "date",
                    "type": "string"
                  },
                  "customer_id": {
                    "type": "string"
                  },
                  "delivery_details_id": {
                    "type": "string"
                  },
                  "discount": {
                    "properties": {
                      "cap": {
                        "minimum": 0,
                        "type": "number"
                      },
                      "percent_off": {
                        "maximum": 100,
                        "minimum": 0,
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "end_date": {
                    "format": "date",
                    "type": "string"
                  },
                  "items": {
                    "properties": {
                      "amount": {
                        "minimum": 0,
                        "type": "integer"
                      },
                      "checkout_options": {
                        "properties": {
                          "tax_tables": {
                            "properties": {
                              "alternate": {
                                "items": {
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "rules": {
                                      "items": {
                                        "properties": {
                                          "rate": {
                                            "minimum": 0,
                                            "type": "number"
                                          },
                                          "shipping_taxed": {
                                            "type": "boolean"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "default": {
                                "properties": {
                                  "rate": {
                                    "minimum": 0,
                                    "type": "number"
                                  },
                                  "shipping_taxed": {
                                    "type": "boolean"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "currency": {
                        "example": "EUR",
                        "maxLength": 3,
                        "minLength": 3,
                        "type": "string"
                      },
                      "items": {
                        "items": {
                          "properties": {
                            "description": {
                              "type": "string"
                            },
                            "merchant_item_id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "plan_id": {
                              "type": "string"
                            },
                            "quantity": {
                              "minimum": 0,
                              "type": "number"
                            },
                            "tax_table_selector": {
                              "type": "string"
                            },
                            "unit_price": {
                              "type": "number"
                            },
                            "weight": {
                              "properties": {
                                "unit": {
                                  "type": "string"
                                },
                                "value": {
                                  "minimum": 0,
                                  "type": "number"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "name",
                            "merchant_item_id",
                            "quantity",
                            "unit_price"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "required": [
                      "amount",
                      "currency"
                    ],
                    "type": "object"
                  },
                  "max_amount_outstanding": {
                    "minimum": 0,
                    "type": "number"
                  },
                  "max_amount_outstanding_currency": {
                    "example": "EUR",
                    "maxLength": 3,
                    "minLength": 3,
                    "type": "string"
                  },
                  "max_orders_outstanding": {
                    "minimum": 0,
                    "type": "integer"
                  },
                  "payment_method_id": {
                    "type": "string"
                  },
                  "recurring_interval": {
                    "enum": [
                      "1 day",
                      "1 week",
                      "1 mon",
                      "1 year"
                    ],
                    "example": "1 mon",
                    "type": "string"
                  },
                  "recurring_interval_count": {
                    "minimum": 0,
                    "type": "integer"
                  },
                  "start_date": {
                    "format": "date",
                    "type": "string"
                  },
                  "status": {
                    "enum": [
                      "active",
                      "inactive"
                    ],
                    "type": "string"
                  }
                },
                "required": [],
                "type": "object"
              }
            }
          },
          "description": "",
          "required": 1
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "additionalFields": false,
                      "properties": {
                        "allow_cancel_before_days": {
                          "minimum": 0,
                          "type": "integer"
                        },
                        "collecting_flow_id": {
                          "minimum": 0,
                          "type": "integer"
                        },
                        "collecting_method": {
                          "enum": [
                            "charge_automatically",
                            "send_invoice"
                          ],
                          "type": "string"
                        },
                        "current_period_end": {
                          "format": "date",
                          "type": "string"
                        },
                        "current_period_start": {
                          "format": "date",
                          "type": "string"
                        },
                        "customer_id": {
                          "type": "string"
                        },
                        "delivery_details_id": {
                          "type": "string"
                        },
                        "discount": {
                          "properties": {
                            "cap": {
                              "minimum": 0,
                              "type": "number"
                            },
                            "percent_off": {
                              "maximum": 100,
                              "minimum": 0,
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "end_date": {
                          "format": "date",
                          "type": "string"
                        },
                        "items": {
                          "properties": {
                            "amount": {
                              "minimum": 0,
                              "type": "integer"
                            },
                            "checkout_options": {
                              "properties": {
                                "tax_tables": {
                                  "properties": {
                                    "alternate": {
                                      "items": {
                                        "properties": {
                                          "name": {
                                            "type": "string"
                                          },
                                          "rules": {
                                            "items": {
                                              "properties": {
                                                "rate": {
                                                  "minimum": 0,
                                                  "type": "number"
                                                },
                                                "shipping_taxed": {
                                                  "type": "boolean"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "type": "array"
                                    },
                                    "default": {
                                      "properties": {
                                        "rate": {
                                          "minimum": 0,
                                          "type": "number"
                                        },
                                        "shipping_taxed": {
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "currency": {
                              "example": "EUR",
                              "maxLength": 3,
                              "minLength": 3,
                              "type": "string"
                            },
                            "items": {
                              "items": {
                                "properties": {
                                  "description": {
                                    "type": "string"
                                  },
                                  "merchant_item_id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "plan_id": {
                                    "type": "string"
                                  },
                                  "quantity": {
                                    "minimum": 0,
                                    "type": "number"
                                  },
                                  "tax_table_selector": {
                                    "type": "string"
                                  },
                                  "unit_price": {
                                    "type": "number"
                                  },
                                  "weight": {
                                    "properties": {
                                      "unit": {
                                        "type": "string"
                                      },
                                      "value": {
                                        "minimum": 0,
                                        "type": "number"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "required": [
                                  "name",
                                  "merchant_item_id",
                                  "quantity",
                                  "unit_price"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "amount",
                            "currency"
                          ],
                          "type": "object"
                        },
                        "max_amount_outstanding": {
                          "minimum": 0,
                          "type": "number"
                        },
                        "max_amount_outstanding_currency": {
                          "example": "EUR",
                          "maxLength": 3,
                          "minLength": 3,
                          "type": "string"
                        },
                        "max_orders_outstanding": {
                          "minimum": 0,
                          "type": "integer"
                        },
                        "payment_method_id": {
                          "type": "string"
                        },
                        "recurring_interval": {
                          "enum": [
                            "1 day",
                            "1 week",
                            "1 mon",
                            "1 year"
                          ],
                          "example": "1 mon",
                          "type": "string"
                        },
                        "recurring_interval_count": {
                          "minimum": 0,
                          "type": "integer"
                        },
                        "start_date": {
                          "format": "date",
                          "type": "string"
                        },
                        "status": {
                          "enum": [
                            "active",
                            "inactive"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "collecting_flow_id",
                        "collecting_method",
                        "customer_id",
                        "delivery_details_id",
                        "items",
                        "payment_method_id",
                        "start_date",
                        "status"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            },
            "description": "Validation errors"
          }
        },
        "summary": "Update Subscription (BETA)",
        "tags": [
          "Subscriptions (BETA)"
        ]
      }
    },
    "/subscriptions/{subscription_id}/invoices": {
      "post": {
        "description": "",
        "operationId": "CreateInvoice",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "subscription_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalFields": false,
                "properties": {
                  "due": {
                    "format": "date",
                    "type": "string"
                  }
                },
                "required": [
                  "due"
                ],
                "type": "object"
              }
            }
          },
          "description": "",
          "required": 1
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "additionalFields": false,
                      "properties": {
                        "due": {
                          "format": "date",
                          "type": "string"
                        }
                      },
                      "required": [
                        "due"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            },
            "description": "Validation errors"
          }
        },
        "summary": "Create Invoice (BETA)",
        "tags": [
          "Subscriptions (BETA)"
        ]
      }
    },
    "/test/bank-transfers": {
      "post": {
        "description": "Create bank transfer",
        "operationId": "Test::CreateBankTransfer",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "amount": {
                    "minimum": 0,
                    "type": "integer"
                  },
                  "currency": {
                    "maxLength": 3,
                    "type": "string"
                  },
                  "dst": {
                    "properties": {
                      "bic": {
                        "type": "string"
                      },
                      "holder_name": {
                        "type": "string"
                      },
                      "iban": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "iban",
                      "bic"
                    ],
                    "type": "object"
                  },
                  "reference": {
                    "type": "string"
                  },
                  "src": {
                    "properties": {
                      "bic": {
                        "type": "string"
                      },
                      "holder_name": {
                        "type": "string"
                      },
                      "iban": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "iban",
                      "bic"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "currency",
                  "amount",
                  "src",
                  "dst",
                  "reference"
                ],
                "type": "object"
              }
            }
          },
          "description": "",
          "required": 1
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            },
            "description": "Validation errors"
          }
        },
        "summary": "Create Bank Transfer (BETA)",
        "tags": [
          "TEST (BETA)"
        ]
      }
    },
    "/transactions": {
      "get": {
        "description": "",
        "operationId": "ListTransactions",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "payment_method",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "completed_from",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "financial_status",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "created_from",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "completed_until",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "site_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "debit_credit",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "created_until",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Next results before the cursor",
            "in": "query",
            "name": "before",
            "required": false,
            "schema": {
              "description": "Next results before the cursor",
              "type": "string"
            }
          },
          {
            "description": "Next results after the cursor",
            "in": "query",
            "name": "after",
            "required": false,
            "schema": {
              "description": "Next results after the cursor",
              "type": "string"
            }
          },
          {
            "description": "Limit number of returned results",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "description": "Limit number of returned results",
              "example": 5,
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "properties": {
                          "amount": {
                            "example": 100,
                            "type": "integer"
                          },
                          "completed": {
                            "format": "datetime",
                            "type": "string"
                          },
                          "costs": {
                            "items": {
                              "amount": {
                                "type": "integer"
                              },
                              "description": {
                                "type": "string"
                              }
                            },
                            "type": "array"
                          },
                          "created": {
                            "format": "datetime",
                            "type": "string"
                          },
                          "currency": {
                            "example": "EUR",
                            "type": "string"
                          },
                          "customer": {
                            "properties": {
                              "email": {
                                "type": "string"
                              },
                              "first_name": {
                                "type": "string"
                              },
                              "iban": {
                                "type": "string"
                              },
                              "last_name": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "debit_credit": {
                            "enum": [
                              "D",
                              "C"
                            ],
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "financial_status": {
                            "example": "completed",
                            "type": "string"
                          },
                          "invoice_id": {
                            "type": "string"
                          },
                          "order_id": {
                            "type": "string"
                          },
                          "payment_method": {
                            "example": "VISA",
                            "type": "string"
                          },
                          "site_id": {
                            "example": 123,
                            "type": "integer"
                          },
                          "status": {
                            "example": "completed",
                            "type": "string"
                          },
                          "transaction_id": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          },
                          "updated": {
                            "format": "datetime",
                            "type": "string"
                          },
                          "var1": {
                            "type": "string"
                          },
                          "var2": {
                            "type": "string"
                          },
                          "var3": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "pager": {
                      "additionalProperties": false,
                      "properties": {
                        "after": {
                          "type": "string"
                        },
                        "before": {
                          "type": "string"
                        },
                        "cursor": {
                          "after": {
                            "type": "string"
                          },
                          "before": {
                            "type": "string"
                          }
                        },
                        "limit": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          }
        },
        "summary": "List Transactions (BETA)",
        "tags": [
          "Reconciliation (BETA)"
        ]
      }
    },
    "/transactions/{transaction_id}": {
      "get": {
        "description": "Get a single transaction",
        "operationId": "GetTransaction",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "transaction_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "amount": {
                          "example": 100,
                          "type": "integer"
                        },
                        "completed": {
                          "format": "datetime",
                          "type": "string"
                        },
                        "costs": {
                          "items": {
                            "amount": {
                              "type": "integer"
                            },
                            "description": {
                              "type": "string"
                            }
                          },
                          "type": "array"
                        },
                        "created": {
                          "format": "datetime",
                          "type": "string"
                        },
                        "currency": {
                          "example": "EUR",
                          "type": "string"
                        },
                        "customer": {
                          "properties": {
                            "email": {
                              "type": "string"
                            },
                            "first_name": {
                              "type": "string"
                            },
                            "iban": {
                              "type": "string"
                            },
                            "last_name": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "debit_credit": {
                          "enum": [
                            "D",
                            "C"
                          ],
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "financial_status": {
                          "example": "completed",
                          "type": "string"
                        },
                        "invoice_id": {
                          "type": "string"
                        },
                        "order_id": {
                          "type": "string"
                        },
                        "payment_method": {
                          "example": "VISA",
                          "type": "string"
                        },
                        "site_id": {
                          "example": 123,
                          "type": "integer"
                        },
                        "status": {
                          "example": "completed",
                          "type": "string"
                        },
                        "transaction_id": {
                          "type": "integer"
                        },
                        "type": {
                          "type": "string"
                        },
                        "updated": {
                          "format": "datetime",
                          "type": "string"
                        },
                        "var1": {
                          "type": "string"
                        },
                        "var2": {
                          "type": "string"
                        },
                        "var3": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorResponse"
                }
              }
            },
            "description": "Transaction not found"
          }
        },
        "summary": "Get Transaction",
        "tags": [
          "Reconciliation (BETA)"
        ]
      }
    },
    "/ubos/{ubo_id}": {
      "get": {
        "description": "Fetch information about an existing ultimate beneficiary owner",
        "operationId": "GetUbo",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "ubo_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "additionalFields": false,
                      "properties": {
                        "address": {
                          "maxLength": 100,
                          "type": "string"
                        },
                        "address_apartment": {
                          "maxLength": 15,
                          "type": "string"
                        },
                        "birthday": {
                          "format": "yyyy-mm-dd",
                          "type": "string"
                        },
                        "city": {
                          "maxLength": 100,
                          "type": "string"
                        },
                        "country": {
                          "format": "country-alpha2",
                          "type": "string"
                        },
                        "country_of_birth": {
                          "format": "country-alpha2",
                          "type": "string"
                        },
                        "email": {
                          "format": "email",
                          "maxLength": 100,
                          "type": "string"
                        },
                        "fax": {
                          "maxLength": 15,
                          "type": "string"
                        },
                        "job_title": {
                          "maxLength": 100,
                          "type": "string"
                        },
                        "mobile_phone": {
                          "maxLength": 25,
                          "type": "string"
                        },
                        "name": {
                          "maxLength": 200,
                          "type": "string"
                        },
                        "office_phone": {
                          "maxLength": 25,
                          "type": "string"
                        },
                        "percentage": {
                          "type": "integer"
                        },
                        "state": {
                          "maxLength": 100,
                          "type": "string"
                        },
                        "title": {
                          "enum": [
                            "mr",
                            "mrs"
                          ],
                          "type": "string"
                        },
                        "type": {
                          "enum": [
                            "control_rights",
                            "other",
                            "shareholder",
                            "voting_rights"
                          ],
                          "type": "string"
                        },
                        "zipcode": {
                          "maxLength": 20,
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "percentage",
                        "title",
                        "name",
                        "birthday",
                        "country_of_birth",
                        "job_title",
                        "email",
                        "country"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorResponse"
                }
              }
            },
            "description": "UBO not found"
          }
        },
        "summary": "Get UBO (BETA)",
        "tags": [
          "Onboarding (BETA)"
        ]
      },
      "patch": {
        "description": "Update information about an existing ultimate beneficiary owner",
        "operationId": "UpdateUbo",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "ubo_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalFields": false,
                "properties": {
                  "address": {
                    "maxLength": 100,
                    "type": "string"
                  },
                  "address_apartment": {
                    "maxLength": 15,
                    "type": "string"
                  },
                  "birthday": {
                    "format": "yyyy-mm-dd",
                    "type": "string"
                  },
                  "city": {
                    "maxLength": 100,
                    "type": "string"
                  },
                  "country": {
                    "format": "country-alpha2",
                    "type": "string"
                  },
                  "country_of_birth": {
                    "format": "country-alpha2",
                    "type": "string"
                  },
                  "email": {
                    "format": "email",
                    "maxLength": 100,
                    "type": "string"
                  },
                  "fax": {
                    "maxLength": 15,
                    "type": "string"
                  },
                  "job_title": {
                    "maxLength": 100,
                    "type": "string"
                  },
                  "mobile_phone": {
                    "maxLength": 25,
                    "type": "string"
                  },
                  "name": {
                    "maxLength": 200,
                    "type": "string"
                  },
                  "office_phone": {
                    "maxLength": 25,
                    "type": "string"
                  },
                  "percentage": {
                    "type": "integer"
                  },
                  "state": {
                    "maxLength": 100,
                    "type": "string"
                  },
                  "title": {
                    "enum": [
                      "mr",
                      "mrs"
                    ],
                    "type": "string"
                  },
                  "type": {
                    "enum": [
                      "control_rights",
                      "other",
                      "shareholder",
                      "voting_rights"
                    ],
                    "type": "string"
                  },
                  "zipcode": {
                    "maxLength": 20,
                    "type": "string"
                  }
                },
                "required": [],
                "type": "object"
              }
            }
          },
          "description": "",
          "required": 1
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "additionalFields": false,
                      "properties": {
                        "address": {
                          "maxLength": 100,
                          "type": "string"
                        },
                        "address_apartment": {
                          "maxLength": 15,
                          "type": "string"
                        },
                        "birthday": {
                          "format": "yyyy-mm-dd",
                          "type": "string"
                        },
                        "city": {
                          "maxLength": 100,
                          "type": "string"
                        },
                        "country": {
                          "format": "country-alpha2",
                          "type": "string"
                        },
                        "country_of_birth": {
                          "format": "country-alpha2",
                          "type": "string"
                        },
                        "email": {
                          "format": "email",
                          "maxLength": 100,
                          "type": "string"
                        },
                        "fax": {
                          "maxLength": 15,
                          "type": "string"
                        },
                        "job_title": {
                          "maxLength": 100,
                          "type": "string"
                        },
                        "mobile_phone": {
                          "maxLength": 25,
                          "type": "string"
                        },
                        "name": {
                          "maxLength": 200,
                          "type": "string"
                        },
                        "office_phone": {
                          "maxLength": 25,
                          "type": "string"
                        },
                        "percentage": {
                          "type": "integer"
                        },
                        "state": {
                          "maxLength": 100,
                          "type": "string"
                        },
                        "title": {
                          "enum": [
                            "mr",
                            "mrs"
                          ],
                          "type": "string"
                        },
                        "type": {
                          "enum": [
                            "control_rights",
                            "other",
                            "shareholder",
                            "voting_rights"
                          ],
                          "type": "string"
                        },
                        "zipcode": {
                          "maxLength": 20,
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "percentage",
                        "title",
                        "name",
                        "birthday",
                        "country_of_birth",
                        "job_title",
                        "email",
                        "country"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorResponse"
                }
              }
            },
            "description": "UBO not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            },
            "description": "Validation errors"
          }
        },
        "summary": "Update UBO (BETA)",
        "tags": [
          "Onboarding (BETA)"
        ]
      }
    },
    "/ubos/{ubo_id}/identitydocs": {
      "get": {
        "description": "List IDs's and/or passports uploaded for an ultimate beneficiary owner",
        "operationId": "ListIdentityDocs",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "ubo_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "additionalFields": false,
                        "properties": {
                          "document_type": {
                            "enum": [
                              "id",
                              "passport",
                              "driverslicense",
                              "proof_of_address"
                            ],
                            "type": "string"
                          },
                          "encoded_content": {
                            "format": "base64-encoded-content",
                            "type": "string"
                          },
                          "filename": {
                            "maxLength": 250,
                            "type": "string"
                          },
                          "mime_type": {
                            "enum": [
                              "application/pdf",
                              "image/jpeg",
                              "image/png"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "filename",
                          "mime_type",
                          "encoded_content",
                          "document_type"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          }
        },
        "summary": "List uploaded ID's or passports (BETA)",
        "tags": [
          "Onboarding (BETA)"
        ]
      },
      "post": {
        "description": "Upload an ID or a passport for an ultimate beneficiary owner",
        "operationId": "CreateIdentityDoc",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "ubo_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalFields": false,
                "properties": {
                  "document_type": {
                    "enum": [
                      "id",
                      "passport",
                      "driverslicense",
                      "proof_of_address"
                    ],
                    "type": "string"
                  },
                  "encoded_content": {
                    "format": "base64-encoded-content",
                    "type": "string"
                  },
                  "filename": {
                    "maxLength": 250,
                    "type": "string"
                  },
                  "mime_type": {
                    "enum": [
                      "application/pdf",
                      "image/jpeg",
                      "image/png"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "filename",
                  "mime_type",
                  "encoded_content",
                  "document_type"
                ],
                "type": "object"
              }
            }
          },
          "description": "",
          "required": 1
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "additionalFields": false,
                      "properties": {
                        "document_type": {
                          "enum": [
                            "id",
                            "passport",
                            "driverslicense",
                            "proof_of_address"
                          ],
                          "type": "string"
                        },
                        "encoded_content": {
                          "format": "base64-encoded-content",
                          "type": "string"
                        },
                        "filename": {
                          "maxLength": 250,
                          "type": "string"
                        },
                        "mime_type": {
                          "enum": [
                            "application/pdf",
                            "image/jpeg",
                            "image/png"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "filename",
                        "mime_type",
                        "encoded_content",
                        "document_type"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorResponse"
                }
              }
            },
            "description": "UBO not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            },
            "description": "Validation errors"
          }
        },
        "summary": "Upload an ID or a passport (BETA)",
        "tags": [
          "Onboarding (BETA)"
        ]
      }
    },
    "/wallets/sessions/applepay": {
      "post": {
        "description": "",
        "operationId": "Wallet::CreateApplePaySession",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalFields": false,
                "properties": {
                  "origin_domain": {
                    "type": "string"
                  },
                  "validation_url": {
                    "format": "url",
                    "type": "string"
                  }
                },
                "required": [
                  "origin_domain",
                  "validation_url"
                ],
                "type": "object"
              }
            }
          },
          "description": "",
          "required": 1
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "session": {
                        "type": "string"
                      }
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": ""
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            },
            "description": "Validation errors"
          }
        },
        "summary": "Create ApplePay session",
        "tags": [
          "Wallets"
        ]
      }
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "servers": [
    {
      "url": "https://api.multisafepay.com/v1/json"
    }
  ]
}